Start testing: Feb 24 01:55 UTC
----------------------------------------------------------
1/60 Testing: Pivot.Nominal
1/60 Test: Pivot.Nominal
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-echen606/hw3/hw3_stu_tests/llrec_tests/llrec_tests" "--gtest_filter=Pivot.Nominal"
Directory: /work/hw-echen606/hw3/hw3_stu_tests/llrec_tests
"Pivot.Nominal" start time: Feb 24 01:55 UTC
Output:
----------------------------------------------------------
==98== Memcheck, a memory error detector
==98== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==98== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==98== Command: /work/hw-echen606/hw3/hw3_stu_tests/llrec_tests/llrec_tests --gtest_filter=Pivot.Nominal
==98== 
Running main() from /build/googletest-K1TalW/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = Pivot.Nominal
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from Pivot
[ RUN      ] Pivot.Nominal
[       OK ] Pivot.Nominal (5 ms)
[----------] 1 test from Pivot (7 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (14 ms total)
[  PASSED  ] 1 test.
==98== 
==98== HEAP SUMMARY:
==98==     in use at exit: 0 bytes in 0 blocks
==98==   total heap usage: 198 allocs, 198 frees, 115,758 bytes allocated
==98== 
==98== All heap blocks were freed -- no leaks are possible
==98== 
==98== For lists of detected and suppressed errors, rerun with: -s
==98== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.45 sec
----------------------------------------------------------
Test Passed.
"Pivot.Nominal" end time: Feb 24 01:55 UTC
"Pivot.Nominal" time elapsed: 00:00:00
----------------------------------------------------------

2/60 Testing: Filter.Size3_nF_F_nF
2/60 Test: Filter.Size3_nF_F_nF
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-echen606/hw3/hw3_stu_tests/llrec_tests/llrec_tests" "--gtest_filter=Filter.Size3_nF_F_nF"
Directory: /work/hw-echen606/hw3/hw3_stu_tests/llrec_tests
"Filter.Size3_nF_F_nF" start time: Feb 24 01:55 UTC
Output:
----------------------------------------------------------
==99== Memcheck, a memory error detector
==99== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==99== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==99== Command: /work/hw-echen606/hw3/hw3_stu_tests/llrec_tests/llrec_tests --gtest_filter=Filter.Size3_nF_F_nF
==99== 
Running main() from /build/googletest-K1TalW/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = Filter.Size3_nF_F_nF
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from Filter
[ RUN      ] Filter.Size3_nF_F_nF
[       OK ] Filter.Size3_nF_F_nF (5 ms)
[----------] 1 test from Filter (7 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (14 ms total)
[  PASSED  ] 1 test.
==99== 
==99== HEAP SUMMARY:
==99==     in use at exit: 0 bytes in 0 blocks
==99==   total heap usage: 200 allocs, 200 frees, 115,899 bytes allocated
==99== 
==99== All heap blocks were freed -- no leaks are possible
==99== 
==99== For lists of detected and suppressed errors, rerun with: -s
==99== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.40 sec
----------------------------------------------------------
Test Passed.
"Filter.Size3_nF_F_nF" end time: Feb 24 01:55 UTC
"Filter.Size3_nF_F_nF" time elapsed: 00:00:00
----------------------------------------------------------

3/60 Testing: Stack.BasicString
3/60 Test: Stack.BasicString
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-echen606/hw3/hw3_stu_tests/stack_tests/stack_tests" "--gtest_filter=Stack.BasicString"
Directory: /work/hw-echen606/hw3/hw3_stu_tests/stack_tests
"Stack.BasicString" start time: Feb 24 01:55 UTC
Output:
----------------------------------------------------------
==100== Memcheck, a memory error detector
==100== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==100== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==100== Command: /work/hw-echen606/hw3/hw3_stu_tests/stack_tests/stack_tests --gtest_filter=Stack.BasicString
==100== 
Running main() from /build/googletest-K1TalW/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = Stack.BasicString
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from Stack
[ RUN      ] Stack.BasicString
[       OK ] Stack.BasicString (19 ms)
[----------] 1 test from Stack (21 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (29 ms total)
[  PASSED  ] 1 test.
==100== 
==100== HEAP SUMMARY:
==100==     in use at exit: 0 bytes in 0 blocks
==100==   total heap usage: 200 allocs, 200 frees, 116,276 bytes allocated
==100== 
==100== All heap blocks were freed -- no leaks are possible
==100== 
==100== For lists of detected and suppressed errors, rerun with: -s
==100== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.49 sec
----------------------------------------------------------
Test Passed.
"Stack.BasicString" end time: Feb 24 01:55 UTC
"Stack.BasicString" time elapsed: 00:00:00
----------------------------------------------------------

4/60 Testing: Stack.RandomInt
4/60 Test: Stack.RandomInt
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-echen606/hw3/hw3_stu_tests/stack_tests/stack_tests" "--gtest_filter=Stack.RandomInt"
Directory: /work/hw-echen606/hw3/hw3_stu_tests/stack_tests
"Stack.RandomInt" start time: Feb 24 01:55 UTC
Output:
----------------------------------------------------------
==101== Memcheck, a memory error detector
==101== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==101== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==101== Command: /work/hw-echen606/hw3/hw3_stu_tests/stack_tests/stack_tests --gtest_filter=Stack.RandomInt
==101== 
Running main() from /build/googletest-K1TalW/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = Stack.RandomInt
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from Stack
[ RUN      ] Stack.RandomInt
[       OK ] Stack.RandomInt (830 ms)
[----------] 1 test from Stack (832 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (840 ms total)
[  PASSED  ] 1 test.
==101== 
==101== HEAP SUMMARY:
==101==     in use at exit: 0 bytes in 0 blocks
==101==   total heap usage: 21,234 allocs, 21,234 frees, 1,077,132 bytes allocated
==101== 
==101== All heap blocks were freed -- no leaks are possible
==101== 
==101== For lists of detected and suppressed errors, rerun with: -s
==101== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.24 sec
----------------------------------------------------------
Test Passed.
"Stack.RandomInt" end time: Feb 24 01:55 UTC
"Stack.RandomInt" time elapsed: 00:00:01
----------------------------------------------------------

5/60 Testing: Stack.TopEmpty
5/60 Test: Stack.TopEmpty
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-echen606/hw3/hw3_stu_tests/stack_tests/stack_tests" "--gtest_filter=Stack.TopEmpty"
Directory: /work/hw-echen606/hw3/hw3_stu_tests/stack_tests
"Stack.TopEmpty" start time: Feb 24 01:55 UTC
Output:
----------------------------------------------------------
==102== Memcheck, a memory error detector
==102== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==102== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==102== Command: /work/hw-echen606/hw3/hw3_stu_tests/stack_tests/stack_tests --gtest_filter=Stack.TopEmpty
==102== 
Running main() from /build/googletest-K1TalW/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = Stack.TopEmpty
[==========] Running 0 tests from 0 test suites.
[==========] 0 tests from 0 test suites ran. (4 ms total)
[  PASSED  ] 0 tests.
==102== 
==102== HEAP SUMMARY:
==102==     in use at exit: 0 bytes in 0 blocks
==102==   total heap usage: 181 allocs, 181 frees, 113,543 bytes allocated
==102== 
==102== All heap blocks were freed -- no leaks are possible
==102== 
==102== For lists of detected and suppressed errors, rerun with: -s
==102== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.41 sec
----------------------------------------------------------
Test Passed.
"Stack.TopEmpty" end time: Feb 24 01:55 UTC
"Stack.TopEmpty" time elapsed: 00:00:00
----------------------------------------------------------

6/60 Testing: Stack.OneElementPush
6/60 Test: Stack.OneElementPush
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-echen606/hw3/hw3_stu_tests/stack_tests/stack_tests" "--gtest_filter=Stack.OneElementPush"
Directory: /work/hw-echen606/hw3/hw3_stu_tests/stack_tests
"Stack.OneElementPush" start time: Feb 24 01:55 UTC
Output:
----------------------------------------------------------
==103== Memcheck, a memory error detector
==103== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==103== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==103== Command: /work/hw-echen606/hw3/hw3_stu_tests/stack_tests/stack_tests --gtest_filter=Stack.OneElementPush
==103== 
Running main() from /build/googletest-K1TalW/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = Stack.OneElementPush
[==========] Running 0 tests from 0 test suites.
[==========] 0 tests from 0 test suites ran. (6 ms total)
[  PASSED  ] 0 tests.
==103== 
==103== HEAP SUMMARY:
==103==     in use at exit: 0 bytes in 0 blocks
==103==   total heap usage: 184 allocs, 184 frees, 113,676 bytes allocated
==103== 
==103== All heap blocks were freed -- no leaks are possible
==103== 
==103== For lists of detected and suppressed errors, rerun with: -s
==103== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.41 sec
----------------------------------------------------------
Test Passed.
"Stack.OneElementPush" end time: Feb 24 01:55 UTC
"Stack.OneElementPush" time elapsed: 00:00:00
----------------------------------------------------------

7/60 Testing: Stack.FiveElementPush
7/60 Test: Stack.FiveElementPush
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-echen606/hw3/hw3_stu_tests/stack_tests/stack_tests" "--gtest_filter=Stack.FiveElementPush"
Directory: /work/hw-echen606/hw3/hw3_stu_tests/stack_tests
"Stack.FiveElementPush" start time: Feb 24 01:55 UTC
Output:
----------------------------------------------------------
==104== Memcheck, a memory error detector
==104== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==104== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==104== Command: /work/hw-echen606/hw3/hw3_stu_tests/stack_tests/stack_tests --gtest_filter=Stack.FiveElementPush
==104== 
Running main() from /build/googletest-K1TalW/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = Stack.FiveElementPush
[==========] Running 0 tests from 0 test suites.
[==========] 0 tests from 0 test suites ran. (5 ms total)
[  PASSED  ] 0 tests.
==104== 
==104== HEAP SUMMARY:
==104==     in use at exit: 0 bytes in 0 blocks
==104==   total heap usage: 184 allocs, 184 frees, 113,683 bytes allocated
==104== 
==104== All heap blocks were freed -- no leaks are possible
==104== 
==104== For lists of detected and suppressed errors, rerun with: -s
==104== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.41 sec
----------------------------------------------------------
Test Passed.
"Stack.FiveElementPush" end time: Feb 24 01:55 UTC
"Stack.FiveElementPush" time elapsed: 00:00:00
----------------------------------------------------------

8/60 Testing: Stack.OneElementPop
8/60 Test: Stack.OneElementPop
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-echen606/hw3/hw3_stu_tests/stack_tests/stack_tests" "--gtest_filter=Stack.OneElementPop"
Directory: /work/hw-echen606/hw3/hw3_stu_tests/stack_tests
"Stack.OneElementPop" start time: Feb 24 01:55 UTC
Output:
----------------------------------------------------------
==105== Memcheck, a memory error detector
==105== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==105== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==105== Command: /work/hw-echen606/hw3/hw3_stu_tests/stack_tests/stack_tests --gtest_filter=Stack.OneElementPop
==105== 
Running main() from /build/googletest-K1TalW/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = Stack.OneElementPop
[==========] Running 0 tests from 0 test suites.
[==========] 0 tests from 0 test suites ran. (5 ms total)
[  PASSED  ] 0 tests.
==105== 
==105== HEAP SUMMARY:
==105==     in use at exit: 0 bytes in 0 blocks
==105==   total heap usage: 184 allocs, 184 frees, 113,669 bytes allocated
==105== 
==105== All heap blocks were freed -- no leaks are possible
==105== 
==105== For lists of detected and suppressed errors, rerun with: -s
==105== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.41 sec
----------------------------------------------------------
Test Passed.
"Stack.OneElementPop" end time: Feb 24 01:55 UTC
"Stack.OneElementPop" time elapsed: 00:00:00
----------------------------------------------------------

9/60 Testing: Stack.FiveElementPop
9/60 Test: Stack.FiveElementPop
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-echen606/hw3/hw3_stu_tests/stack_tests/stack_tests" "--gtest_filter=Stack.FiveElementPop"
Directory: /work/hw-echen606/hw3/hw3_stu_tests/stack_tests
"Stack.FiveElementPop" start time: Feb 24 01:55 UTC
Output:
----------------------------------------------------------
==106== Memcheck, a memory error detector
==106== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==106== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==106== Command: /work/hw-echen606/hw3/hw3_stu_tests/stack_tests/stack_tests --gtest_filter=Stack.FiveElementPop
==106== 
Running main() from /build/googletest-K1TalW/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = Stack.FiveElementPop
[==========] Running 0 tests from 0 test suites.
[==========] 0 tests from 0 test suites ran. (5 ms total)
[  PASSED  ] 0 tests.
==106== 
==106== HEAP SUMMARY:
==106==     in use at exit: 0 bytes in 0 blocks
==106==   total heap usage: 184 allocs, 184 frees, 113,676 bytes allocated
==106== 
==106== All heap blocks were freed -- no leaks are possible
==106== 
==106== For lists of detected and suppressed errors, rerun with: -s
==106== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.46 sec
----------------------------------------------------------
Test Passed.
"Stack.FiveElementPop" end time: Feb 24 01:55 UTC
"Stack.FiveElementPop" time elapsed: 00:00:00
----------------------------------------------------------

10/60 Testing: Stack.PopEmpty
10/60 Test: Stack.PopEmpty
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-echen606/hw3/hw3_stu_tests/stack_tests/stack_tests" "--gtest_filter=Stack.PopEmpty"
Directory: /work/hw-echen606/hw3/hw3_stu_tests/stack_tests
"Stack.PopEmpty" start time: Feb 24 01:55 UTC
Output:
----------------------------------------------------------
==107== Memcheck, a memory error detector
==107== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==107== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==107== Command: /work/hw-echen606/hw3/hw3_stu_tests/stack_tests/stack_tests --gtest_filter=Stack.PopEmpty
==107== 
Running main() from /build/googletest-K1TalW/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = Stack.PopEmpty
[==========] Running 0 tests from 0 test suites.
[==========] 0 tests from 0 test suites ran. (4 ms total)
[  PASSED  ] 0 tests.
==107== 
==107== HEAP SUMMARY:
==107==     in use at exit: 0 bytes in 0 blocks
==107==   total heap usage: 181 allocs, 181 frees, 113,543 bytes allocated
==107== 
==107== All heap blocks were freed -- no leaks are possible
==107== 
==107== For lists of detected and suppressed errors, rerun with: -s
==107== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.41 sec
----------------------------------------------------------
Test Passed.
"Stack.PopEmpty" end time: Feb 24 01:55 UTC
"Stack.PopEmpty" time elapsed: 00:00:00
----------------------------------------------------------

11/60 Testing: Stack.EmptyThenRefill
11/60 Test: Stack.EmptyThenRefill
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-echen606/hw3/hw3_stu_tests/stack_tests/stack_tests" "--gtest_filter=Stack.EmptyThenRefill"
Directory: /work/hw-echen606/hw3/hw3_stu_tests/stack_tests
"Stack.EmptyThenRefill" start time: Feb 24 01:55 UTC
Output:
----------------------------------------------------------
==108== Memcheck, a memory error detector
==108== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==108== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==108== Command: /work/hw-echen606/hw3/hw3_stu_tests/stack_tests/stack_tests --gtest_filter=Stack.EmptyThenRefill
==108== 
Running main() from /build/googletest-K1TalW/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = Stack.EmptyThenRefill
[==========] Running 0 tests from 0 test suites.
[==========] 0 tests from 0 test suites ran. (5 ms total)
[  PASSED  ] 0 tests.
==108== 
==108== HEAP SUMMARY:
==108==     in use at exit: 0 bytes in 0 blocks
==108==   total heap usage: 184 allocs, 184 frees, 113,683 bytes allocated
==108== 
==108== All heap blocks were freed -- no leaks are possible
==108== 
==108== For lists of detected and suppressed errors, rerun with: -s
==108== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.41 sec
----------------------------------------------------------
Test Passed.
"Stack.EmptyThenRefill" end time: Feb 24 01:55 UTC
"Stack.EmptyThenRefill" time elapsed: 00:00:00
----------------------------------------------------------

12/60 Testing: Stack.PopThenAdd
12/60 Test: Stack.PopThenAdd
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-echen606/hw3/hw3_stu_tests/stack_tests/stack_tests" "--gtest_filter=Stack.PopThenAdd"
Directory: /work/hw-echen606/hw3/hw3_stu_tests/stack_tests
"Stack.PopThenAdd" start time: Feb 24 01:55 UTC
Output:
----------------------------------------------------------
==109== Memcheck, a memory error detector
==109== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==109== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==109== Command: /work/hw-echen606/hw3/hw3_stu_tests/stack_tests/stack_tests --gtest_filter=Stack.PopThenAdd
==109== 
Running main() from /build/googletest-K1TalW/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = Stack.PopThenAdd
[==========] Running 0 tests from 0 test suites.
[==========] 0 tests from 0 test suites ran. (5 ms total)
[  PASSED  ] 0 tests.
==109== 
==109== HEAP SUMMARY:
==109==     in use at exit: 0 bytes in 0 blocks
==109==   total heap usage: 184 allocs, 184 frees, 113,648 bytes allocated
==109== 
==109== All heap blocks were freed -- no leaks are possible
==109== 
==109== For lists of detected and suppressed errors, rerun with: -s
==109== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.40 sec
----------------------------------------------------------
Test Passed.
"Stack.PopThenAdd" end time: Feb 24 01:55 UTC
"Stack.PopThenAdd" time elapsed: 00:00:00
----------------------------------------------------------

13/60 Testing: StackStress.50x50Elements
13/60 Test: StackStress.50x50Elements
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-echen606/hw3/hw3_stu_tests/stack_tests/stack_tests" "--gtest_filter=StackStress.50x50Elements"
Directory: /work/hw-echen606/hw3/hw3_stu_tests/stack_tests
"StackStress.50x50Elements" start time: Feb 24 01:55 UTC
Output:
----------------------------------------------------------
==110== Memcheck, a memory error detector
==110== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==110== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==110== Command: /work/hw-echen606/hw3/hw3_stu_tests/stack_tests/stack_tests --gtest_filter=StackStress.50x50Elements
==110== 
Running main() from /build/googletest-K1TalW/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = StackStress.50x50Elements
[==========] Running 0 tests from 0 test suites.
[==========] 0 tests from 0 test suites ran. (6 ms total)
[  PASSED  ] 0 tests.
==110== 
==110== HEAP SUMMARY:
==110==     in use at exit: 0 bytes in 0 blocks
==110==   total heap usage: 184 allocs, 184 frees, 113,711 bytes allocated
==110== 
==110== All heap blocks were freed -- no leaks are possible
==110== 
==110== For lists of detected and suppressed errors, rerun with: -s
==110== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.44 sec
----------------------------------------------------------
Test Passed.
"StackStress.50x50Elements" end time: Feb 24 01:55 UTC
"StackStress.50x50Elements" time elapsed: 00:00:00
----------------------------------------------------------

14/60 Testing: StackStress.5x1000Elements
14/60 Test: StackStress.5x1000Elements
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-echen606/hw3/hw3_stu_tests/stack_tests/stack_tests" "--gtest_filter=StackStress.5x1000Elements"
Directory: /work/hw-echen606/hw3/hw3_stu_tests/stack_tests
"StackStress.5x1000Elements" start time: Feb 24 01:55 UTC
Output:
----------------------------------------------------------
==111== Memcheck, a memory error detector
==111== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==111== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==111== Command: /work/hw-echen606/hw3/hw3_stu_tests/stack_tests/stack_tests --gtest_filter=StackStress.5x1000Elements
==111== 
Running main() from /build/googletest-K1TalW/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = StackStress.5x1000Elements
[==========] Running 0 tests from 0 test suites.
[==========] 0 tests from 0 test suites ran. (5 ms total)
[  PASSED  ] 0 tests.
==111== 
==111== HEAP SUMMARY:
==111==     in use at exit: 0 bytes in 0 blocks
==111==   total heap usage: 184 allocs, 184 frees, 113,718 bytes allocated
==111== 
==111== All heap blocks were freed -- no leaks are possible
==111== 
==111== For lists of detected and suppressed errors, rerun with: -s
==111== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.41 sec
----------------------------------------------------------
Test Passed.
"StackStress.5x1000Elements" end time: Feb 24 01:55 UTC
"StackStress.5x1000Elements" time elapsed: 00:00:00
----------------------------------------------------------

15/60 Testing: StackStress.2x10000Elements
15/60 Test: StackStress.2x10000Elements
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-echen606/hw3/hw3_stu_tests/stack_tests/stack_tests" "--gtest_filter=StackStress.2x10000Elements"
Directory: /work/hw-echen606/hw3/hw3_stu_tests/stack_tests
"StackStress.2x10000Elements" start time: Feb 24 01:55 UTC
Output:
----------------------------------------------------------
==112== Memcheck, a memory error detector
==112== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==112== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==112== Command: /work/hw-echen606/hw3/hw3_stu_tests/stack_tests/stack_tests --gtest_filter=StackStress.2x10000Elements
==112== 
Running main() from /build/googletest-K1TalW/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = StackStress.2x10000Elements
[==========] Running 0 tests from 0 test suites.
[==========] 0 tests from 0 test suites ran. (5 ms total)
[  PASSED  ] 0 tests.
==112== 
==112== HEAP SUMMARY:
==112==     in use at exit: 0 bytes in 0 blocks
==112==   total heap usage: 184 allocs, 184 frees, 113,725 bytes allocated
==112== 
==112== All heap blocks were freed -- no leaks are possible
==112== 
==112== For lists of detected and suppressed errors, rerun with: -s
==112== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.41 sec
----------------------------------------------------------
Test Passed.
"StackStress.2x10000Elements" end time: Feb 24 01:55 UTC
"StackStress.2x10000Elements" time elapsed: 00:00:00
----------------------------------------------------------

16/60 Testing: HeapTest.ConstructionDestruction
16/60 Test: HeapTest.ConstructionDestruction
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-echen606/hw3/hw3_stu_tests/heap_tests/heap_tests" "--gtest_filter=HeapTest.ConstructionDestruction"
Directory: /work/hw-echen606/hw3/hw3_stu_tests/heap_tests
"HeapTest.ConstructionDestruction" start time: Feb 24 01:55 UTC
Output:
----------------------------------------------------------
==113== Memcheck, a memory error detector
==113== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==113== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==113== Command: /work/hw-echen606/hw3/hw3_stu_tests/heap_tests/heap_tests --gtest_filter=HeapTest.ConstructionDestruction
==113== 
Running main() from /build/googletest-K1TalW/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = HeapTest.ConstructionDestruction
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from HeapTest
[ RUN      ] HeapTest.ConstructionDestruction
[       OK ] HeapTest.ConstructionDestruction (2 ms)
[----------] 1 test from HeapTest (5 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (11 ms total)
[  PASSED  ] 1 test.
==113== 
==113== HEAP SUMMARY:
==113==     in use at exit: 0 bytes in 0 blocks
==113==   total heap usage: 457 allocs, 457 frees, 132,192 bytes allocated
==113== 
==113== All heap blocks were freed -- no leaks are possible
==113== 
==113== For lists of detected and suppressed errors, rerun with: -s
==113== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.49 sec
----------------------------------------------------------
Test Passed.
"HeapTest.ConstructionDestruction" end time: Feb 24 01:55 UTC
"HeapTest.ConstructionDestruction" time elapsed: 00:00:00
----------------------------------------------------------

17/60 Testing: HeapTest.InitiallyEmpty
17/60 Test: HeapTest.InitiallyEmpty
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-echen606/hw3/hw3_stu_tests/heap_tests/heap_tests" "--gtest_filter=HeapTest.InitiallyEmpty"
Directory: /work/hw-echen606/hw3/hw3_stu_tests/heap_tests
"HeapTest.InitiallyEmpty" start time: Feb 24 01:55 UTC
Output:
----------------------------------------------------------
==114== Memcheck, a memory error detector
==114== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==114== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==114== Command: /work/hw-echen606/hw3/hw3_stu_tests/heap_tests/heap_tests --gtest_filter=HeapTest.InitiallyEmpty
==114== 
Running main() from /build/googletest-K1TalW/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = HeapTest.InitiallyEmpty
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from HeapTest
[ RUN      ] HeapTest.InitiallyEmpty
[       OK ] HeapTest.InitiallyEmpty (3 ms)
[----------] 1 test from HeapTest (5 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (12 ms total)
[  PASSED  ] 1 test.
==114== 
==114== HEAP SUMMARY:
==114==     in use at exit: 0 bytes in 0 blocks
==114==   total heap usage: 457 allocs, 457 frees, 132,075 bytes allocated
==114== 
==114== All heap blocks were freed -- no leaks are possible
==114== 
==114== For lists of detected and suppressed errors, rerun with: -s
==114== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.44 sec
----------------------------------------------------------
Test Passed.
"HeapTest.InitiallyEmpty" end time: Feb 24 01:55 UTC
"HeapTest.InitiallyEmpty" time elapsed: 00:00:00
----------------------------------------------------------

18/60 Testing: HeapTest.EmptyTopException
18/60 Test: HeapTest.EmptyTopException
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-echen606/hw3/hw3_stu_tests/heap_tests/heap_tests" "--gtest_filter=HeapTest.EmptyTopException"
Directory: /work/hw-echen606/hw3/hw3_stu_tests/heap_tests
"HeapTest.EmptyTopException" start time: Feb 24 01:55 UTC
Output:
----------------------------------------------------------
==115== Memcheck, a memory error detector
==115== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==115== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==115== Command: /work/hw-echen606/hw3/hw3_stu_tests/heap_tests/heap_tests --gtest_filter=HeapTest.EmptyTopException
==115== 
Running main() from /build/googletest-K1TalW/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = HeapTest.EmptyTopException
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from HeapTest
[ RUN      ] HeapTest.EmptyTopException
[       OK ] HeapTest.EmptyTopException (13 ms)
[----------] 1 test from HeapTest (14 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (21 ms total)
[  PASSED  ] 1 test.
==115== 
==115== HEAP SUMMARY:
==115==     in use at exit: 0 bytes in 0 blocks
==115==   total heap usage: 459 allocs, 459 frees, 132,278 bytes allocated
==115== 
==115== All heap blocks were freed -- no leaks are possible
==115== 
==115== For lists of detected and suppressed errors, rerun with: -s
==115== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.43 sec
----------------------------------------------------------
Test Passed.
"HeapTest.EmptyTopException" end time: Feb 24 01:55 UTC
"HeapTest.EmptyTopException" time elapsed: 00:00:00
----------------------------------------------------------

19/60 Testing: HeapTest.EmptyPopException
19/60 Test: HeapTest.EmptyPopException
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-echen606/hw3/hw3_stu_tests/heap_tests/heap_tests" "--gtest_filter=HeapTest.EmptyPopException"
Directory: /work/hw-echen606/hw3/hw3_stu_tests/heap_tests
"HeapTest.EmptyPopException" start time: Feb 24 01:55 UTC
Output:
----------------------------------------------------------
==116== Memcheck, a memory error detector
==116== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==116== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==116== Command: /work/hw-echen606/hw3/hw3_stu_tests/heap_tests/heap_tests --gtest_filter=HeapTest.EmptyPopException
==116== 
Running main() from /build/googletest-K1TalW/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = HeapTest.EmptyPopException
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from HeapTest
[ RUN      ] HeapTest.EmptyPopException
[       OK ] HeapTest.EmptyPopException (12 ms)
[----------] 1 test from HeapTest (15 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (22 ms total)
[  PASSED  ] 1 test.
==116== 
==116== HEAP SUMMARY:
==116==     in use at exit: 0 bytes in 0 blocks
==116==   total heap usage: 459 allocs, 459 frees, 132,278 bytes allocated
==116== 
==116== All heap blocks were freed -- no leaks are possible
==116== 
==116== For lists of detected and suppressed errors, rerun with: -s
==116== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.43 sec
----------------------------------------------------------
Test Passed.
"HeapTest.EmptyPopException" end time: Feb 24 01:55 UTC
"HeapTest.EmptyPopException" time elapsed: 00:00:00
----------------------------------------------------------

20/60 Testing: HeapTest.SingleItemNonempty
20/60 Test: HeapTest.SingleItemNonempty
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-echen606/hw3/hw3_stu_tests/heap_tests/heap_tests" "--gtest_filter=HeapTest.SingleItemNonempty"
Directory: /work/hw-echen606/hw3/hw3_stu_tests/heap_tests
"HeapTest.SingleItemNonempty" start time: Feb 24 01:55 UTC
Output:
----------------------------------------------------------
==117== Memcheck, a memory error detector
==117== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==117== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==117== Command: /work/hw-echen606/hw3/hw3_stu_tests/heap_tests/heap_tests --gtest_filter=HeapTest.SingleItemNonempty
==117== 
Running main() from /build/googletest-K1TalW/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = HeapTest.SingleItemNonempty
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from HeapTest
[ RUN      ] HeapTest.SingleItemNonempty
[       OK ] HeapTest.SingleItemNonempty (5 ms)
[----------] 1 test from HeapTest (7 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (14 ms total)
[  PASSED  ] 1 test.
==117== 
==117== HEAP SUMMARY:
==117==     in use at exit: 0 bytes in 0 blocks
==117==   total heap usage: 458 allocs, 458 frees, 132,107 bytes allocated
==117== 
==117== All heap blocks were freed -- no leaks are possible
==117== 
==117== For lists of detected and suppressed errors, rerun with: -s
==117== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.42 sec
----------------------------------------------------------
Test Passed.
"HeapTest.SingleItemNonempty" end time: Feb 24 01:55 UTC
"HeapTest.SingleItemNonempty" time elapsed: 00:00:00
----------------------------------------------------------

21/60 Testing: HeapTest.SingleItemPush
21/60 Test: HeapTest.SingleItemPush
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-echen606/hw3/hw3_stu_tests/heap_tests/heap_tests" "--gtest_filter=HeapTest.SingleItemPush"
Directory: /work/hw-echen606/hw3/hw3_stu_tests/heap_tests
"HeapTest.SingleItemPush" start time: Feb 24 01:55 UTC
Output:
----------------------------------------------------------
==118== Memcheck, a memory error detector
==118== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==118== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==118== Command: /work/hw-echen606/hw3/hw3_stu_tests/heap_tests/heap_tests --gtest_filter=HeapTest.SingleItemPush
==118== 
Running main() from /build/googletest-K1TalW/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = HeapTest.SingleItemPush
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from HeapTest
[ RUN      ] HeapTest.SingleItemPush
[       OK ] HeapTest.SingleItemPush (5 ms)
[----------] 1 test from HeapTest (8 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (15 ms total)
[  PASSED  ] 1 test.
==118== 
==118== HEAP SUMMARY:
==118==     in use at exit: 0 bytes in 0 blocks
==118==   total heap usage: 458 allocs, 458 frees, 132,079 bytes allocated
==118== 
==118== All heap blocks were freed -- no leaks are possible
==118== 
==118== For lists of detected and suppressed errors, rerun with: -s
==118== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.42 sec
----------------------------------------------------------
Test Passed.
"HeapTest.SingleItemPush" end time: Feb 24 01:55 UTC
"HeapTest.SingleItemPush" time elapsed: 00:00:00
----------------------------------------------------------

22/60 Testing: HeapTest.SingleItemPushPop
22/60 Test: HeapTest.SingleItemPushPop
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-echen606/hw3/hw3_stu_tests/heap_tests/heap_tests" "--gtest_filter=HeapTest.SingleItemPushPop"
Directory: /work/hw-echen606/hw3/hw3_stu_tests/heap_tests
"HeapTest.SingleItemPushPop" start time: Feb 24 01:55 UTC
Output:
----------------------------------------------------------
==119== Memcheck, a memory error detector
==119== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==119== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==119== Command: /work/hw-echen606/hw3/hw3_stu_tests/heap_tests/heap_tests --gtest_filter=HeapTest.SingleItemPushPop
==119== 
Running main() from /build/googletest-K1TalW/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = HeapTest.SingleItemPushPop
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from HeapTest
[ RUN      ] HeapTest.SingleItemPushPop
[       OK ] HeapTest.SingleItemPushPop (6 ms)
[----------] 1 test from HeapTest (8 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (15 ms total)
[  PASSED  ] 1 test.
==119== 
==119== HEAP SUMMARY:
==119==     in use at exit: 0 bytes in 0 blocks
==119==   total heap usage: 458 allocs, 458 frees, 132,100 bytes allocated
==119== 
==119== All heap blocks were freed -- no leaks are possible
==119== 
==119== For lists of detected and suppressed errors, rerun with: -s
==119== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.42 sec
----------------------------------------------------------
Test Passed.
"HeapTest.SingleItemPushPop" end time: Feb 24 01:55 UTC
"HeapTest.SingleItemPushPop" time elapsed: 00:00:00
----------------------------------------------------------

23/60 Testing: HeapTest.TwoElementPush_LowPriFirst
23/60 Test: HeapTest.TwoElementPush_LowPriFirst
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-echen606/hw3/hw3_stu_tests/heap_tests/heap_tests" "--gtest_filter=HeapTest.TwoElementPush_LowPriFirst"
Directory: /work/hw-echen606/hw3/hw3_stu_tests/heap_tests
"HeapTest.TwoElementPush_LowPriFirst" start time: Feb 24 01:55 UTC
Output:
----------------------------------------------------------
==120== Memcheck, a memory error detector
==120== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==120== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==120== Command: /work/hw-echen606/hw3/hw3_stu_tests/heap_tests/heap_tests --gtest_filter=HeapTest.TwoElementPush_LowPriFirst
==120== 
Running main() from /build/googletest-K1TalW/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = HeapTest.TwoElementPush_LowPriFirst
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from HeapTest
[ RUN      ] HeapTest.TwoElementPush_LowPriFirst
[       OK ] HeapTest.TwoElementPush_LowPriFirst (7 ms)
[----------] 1 test from HeapTest (8 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (15 ms total)
[  PASSED  ] 1 test.
==120== 
==120== HEAP SUMMARY:
==120==     in use at exit: 0 bytes in 0 blocks
==120==   total heap usage: 459 allocs, 459 frees, 132,306 bytes allocated
==120== 
==120== All heap blocks were freed -- no leaks are possible
==120== 
==120== For lists of detected and suppressed errors, rerun with: -s
==120== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.42 sec
----------------------------------------------------------
Test Passed.
"HeapTest.TwoElementPush_LowPriFirst" end time: Feb 24 01:55 UTC
"HeapTest.TwoElementPush_LowPriFirst" time elapsed: 00:00:00
----------------------------------------------------------

24/60 Testing: HeapTest.TwoElementPush_HighPriFirst
24/60 Test: HeapTest.TwoElementPush_HighPriFirst
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-echen606/hw3/hw3_stu_tests/heap_tests/heap_tests" "--gtest_filter=HeapTest.TwoElementPush_HighPriFirst"
Directory: /work/hw-echen606/hw3/hw3_stu_tests/heap_tests
"HeapTest.TwoElementPush_HighPriFirst" start time: Feb 24 01:55 UTC
Output:
----------------------------------------------------------
==121== Memcheck, a memory error detector
==121== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==121== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==121== Command: /work/hw-echen606/hw3/hw3_stu_tests/heap_tests/heap_tests --gtest_filter=HeapTest.TwoElementPush_HighPriFirst
==121== 
Running main() from /build/googletest-K1TalW/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = HeapTest.TwoElementPush_HighPriFirst
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from HeapTest
[ RUN      ] HeapTest.TwoElementPush_HighPriFirst
[       OK ] HeapTest.TwoElementPush_HighPriFirst (7 ms)
[----------] 1 test from HeapTest (8 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (15 ms total)
[  PASSED  ] 1 test.
==121== 
==121== HEAP SUMMARY:
==121==     in use at exit: 0 bytes in 0 blocks
==121==   total heap usage: 459 allocs, 459 frees, 132,340 bytes allocated
==121== 
==121== All heap blocks were freed -- no leaks are possible
==121== 
==121== For lists of detected and suppressed errors, rerun with: -s
==121== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.42 sec
----------------------------------------------------------
Test Passed.
"HeapTest.TwoElementPush_HighPriFirst" end time: Feb 24 01:55 UTC
"HeapTest.TwoElementPush_HighPriFirst" time elapsed: 00:00:00
----------------------------------------------------------

25/60 Testing: HeapTest.Duplicates
25/60 Test: HeapTest.Duplicates
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-echen606/hw3/hw3_stu_tests/heap_tests/heap_tests" "--gtest_filter=HeapTest.Duplicates"
Directory: /work/hw-echen606/hw3/hw3_stu_tests/heap_tests
"HeapTest.Duplicates" start time: Feb 24 01:55 UTC
Output:
----------------------------------------------------------
==122== Memcheck, a memory error detector
==122== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==122== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==122== Command: /work/hw-echen606/hw3/hw3_stu_tests/heap_tests/heap_tests --gtest_filter=HeapTest.Duplicates
==122== 
Running main() from /build/googletest-K1TalW/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = HeapTest.Duplicates
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from HeapTest
[ RUN      ] HeapTest.Duplicates
[       OK ] HeapTest.Duplicates (7 ms)
[----------] 1 test from HeapTest (9 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (15 ms total)
[  PASSED  ] 1 test.
==122== 
==122== HEAP SUMMARY:
==122==     in use at exit: 0 bytes in 0 blocks
==122==   total heap usage: 460 allocs, 460 frees, 132,075 bytes allocated
==122== 
==122== All heap blocks were freed -- no leaks are possible
==122== 
==122== For lists of detected and suppressed errors, rerun with: -s
==122== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.42 sec
----------------------------------------------------------
Test Passed.
"HeapTest.Duplicates" end time: Feb 24 01:55 UTC
"HeapTest.Duplicates" time elapsed: 00:00:00
----------------------------------------------------------

26/60 Testing: HeapTest.NegativeElements
26/60 Test: HeapTest.NegativeElements
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-echen606/hw3/hw3_stu_tests/heap_tests/heap_tests" "--gtest_filter=HeapTest.NegativeElements"
Directory: /work/hw-echen606/hw3/hw3_stu_tests/heap_tests
"HeapTest.NegativeElements" start time: Feb 24 01:55 UTC
Output:
----------------------------------------------------------
==123== Memcheck, a memory error detector
==123== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==123== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==123== Command: /work/hw-echen606/hw3/hw3_stu_tests/heap_tests/heap_tests --gtest_filter=HeapTest.NegativeElements
==123== 
Running main() from /build/googletest-K1TalW/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = HeapTest.NegativeElements
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from HeapTest
[ RUN      ] HeapTest.NegativeElements
[       OK ] HeapTest.NegativeElements (6 ms)
[----------] 1 test from HeapTest (7 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (14 ms total)
[  PASSED  ] 1 test.
==123== 
==123== HEAP SUMMARY:
==123==     in use at exit: 0 bytes in 0 blocks
==123==   total heap usage: 459 allocs, 459 frees, 132,101 bytes allocated
==123== 
==123== All heap blocks were freed -- no leaks are possible
==123== 
==123== For lists of detected and suppressed errors, rerun with: -s
==123== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.42 sec
----------------------------------------------------------
Test Passed.
"HeapTest.NegativeElements" end time: Feb 24 01:55 UTC
"HeapTest.NegativeElements" time elapsed: 00:00:00
----------------------------------------------------------

27/60 Testing: HeapTest.ThreeElementPush_0_5_10
27/60 Test: HeapTest.ThreeElementPush_0_5_10
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-echen606/hw3/hw3_stu_tests/heap_tests/heap_tests" "--gtest_filter=HeapTest.ThreeElementPush_0_5_10"
Directory: /work/hw-echen606/hw3/hw3_stu_tests/heap_tests
"HeapTest.ThreeElementPush_0_5_10" start time: Feb 24 01:55 UTC
Output:
----------------------------------------------------------
==124== Memcheck, a memory error detector
==124== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==124== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==124== Command: /work/hw-echen606/hw3/hw3_stu_tests/heap_tests/heap_tests --gtest_filter=HeapTest.ThreeElementPush_0_5_10
==124== 
Running main() from /build/googletest-K1TalW/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = HeapTest.ThreeElementPush_0_5_10
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from HeapTest
[ RUN      ] HeapTest.ThreeElementPush_0_5_10
[       OK ] HeapTest.ThreeElementPush_0_5_10 (7 ms)
[----------] 1 test from HeapTest (8 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (15 ms total)
[  PASSED  ] 1 test.
==124== 
==124== HEAP SUMMARY:
==124==     in use at exit: 0 bytes in 0 blocks
==124==   total heap usage: 460 allocs, 460 frees, 132,220 bytes allocated
==124== 
==124== All heap blocks were freed -- no leaks are possible
==124== 
==124== For lists of detected and suppressed errors, rerun with: -s
==124== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.42 sec
----------------------------------------------------------
Test Passed.
"HeapTest.ThreeElementPush_0_5_10" end time: Feb 24 01:55 UTC
"HeapTest.ThreeElementPush_0_5_10" time elapsed: 00:00:00
----------------------------------------------------------

28/60 Testing: HeapTest.ThreeElementPush_0_10_5
28/60 Test: HeapTest.ThreeElementPush_0_10_5
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-echen606/hw3/hw3_stu_tests/heap_tests/heap_tests" "--gtest_filter=HeapTest.ThreeElementPush_0_10_5"
Directory: /work/hw-echen606/hw3/hw3_stu_tests/heap_tests
"HeapTest.ThreeElementPush_0_10_5" start time: Feb 24 01:55 UTC
Output:
----------------------------------------------------------
==125== Memcheck, a memory error detector
==125== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==125== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==125== Command: /work/hw-echen606/hw3/hw3_stu_tests/heap_tests/heap_tests --gtest_filter=HeapTest.ThreeElementPush_0_10_5
==125== 
Running main() from /build/googletest-K1TalW/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = HeapTest.ThreeElementPush_0_10_5
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from HeapTest
[ RUN      ] HeapTest.ThreeElementPush_0_10_5
[       OK ] HeapTest.ThreeElementPush_0_10_5 (7 ms)
[----------] 1 test from HeapTest (8 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (15 ms total)
[  PASSED  ] 1 test.
==125== 
==125== HEAP SUMMARY:
==125==     in use at exit: 0 bytes in 0 blocks
==125==   total heap usage: 460 allocs, 460 frees, 132,220 bytes allocated
==125== 
==125== All heap blocks were freed -- no leaks are possible
==125== 
==125== For lists of detected and suppressed errors, rerun with: -s
==125== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.42 sec
----------------------------------------------------------
Test Passed.
"HeapTest.ThreeElementPush_0_10_5" end time: Feb 24 01:55 UTC
"HeapTest.ThreeElementPush_0_10_5" time elapsed: 00:00:00
----------------------------------------------------------

29/60 Testing: HeapTest.ThreeElementPush_5_0_10
29/60 Test: HeapTest.ThreeElementPush_5_0_10
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-echen606/hw3/hw3_stu_tests/heap_tests/heap_tests" "--gtest_filter=HeapTest.ThreeElementPush_5_0_10"
Directory: /work/hw-echen606/hw3/hw3_stu_tests/heap_tests
"HeapTest.ThreeElementPush_5_0_10" start time: Feb 24 01:55 UTC
Output:
----------------------------------------------------------
==126== Memcheck, a memory error detector
==126== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==126== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==126== Command: /work/hw-echen606/hw3/hw3_stu_tests/heap_tests/heap_tests --gtest_filter=HeapTest.ThreeElementPush_5_0_10
==126== 
Running main() from /build/googletest-K1TalW/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = HeapTest.ThreeElementPush_5_0_10
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from HeapTest
[ RUN      ] HeapTest.ThreeElementPush_5_0_10
[       OK ] HeapTest.ThreeElementPush_5_0_10 (7 ms)
[----------] 1 test from HeapTest (9 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (16 ms total)
[  PASSED  ] 1 test.
==126== 
==126== HEAP SUMMARY:
==126==     in use at exit: 0 bytes in 0 blocks
==126==   total heap usage: 460 allocs, 460 frees, 132,220 bytes allocated
==126== 
==126== All heap blocks were freed -- no leaks are possible
==126== 
==126== For lists of detected and suppressed errors, rerun with: -s
==126== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.43 sec
----------------------------------------------------------
Test Passed.
"HeapTest.ThreeElementPush_5_0_10" end time: Feb 24 01:55 UTC
"HeapTest.ThreeElementPush_5_0_10" time elapsed: 00:00:00
----------------------------------------------------------

30/60 Testing: HeapTest.ThreeElementPush_5_10_0
30/60 Test: HeapTest.ThreeElementPush_5_10_0
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-echen606/hw3/hw3_stu_tests/heap_tests/heap_tests" "--gtest_filter=HeapTest.ThreeElementPush_5_10_0"
Directory: /work/hw-echen606/hw3/hw3_stu_tests/heap_tests
"HeapTest.ThreeElementPush_5_10_0" start time: Feb 24 01:55 UTC
Output:
----------------------------------------------------------
==127== Memcheck, a memory error detector
==127== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==127== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==127== Command: /work/hw-echen606/hw3/hw3_stu_tests/heap_tests/heap_tests --gtest_filter=HeapTest.ThreeElementPush_5_10_0
==127== 
Running main() from /build/googletest-K1TalW/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = HeapTest.ThreeElementPush_5_10_0
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from HeapTest
[ RUN      ] HeapTest.ThreeElementPush_5_10_0
[       OK ] HeapTest.ThreeElementPush_5_10_0 (7 ms)
[----------] 1 test from HeapTest (8 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (16 ms total)
[  PASSED  ] 1 test.
==127== 
==127== HEAP SUMMARY:
==127==     in use at exit: 0 bytes in 0 blocks
==127==   total heap usage: 460 allocs, 460 frees, 132,220 bytes allocated
==127== 
==127== All heap blocks were freed -- no leaks are possible
==127== 
==127== For lists of detected and suppressed errors, rerun with: -s
==127== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.42 sec
----------------------------------------------------------
Test Passed.
"HeapTest.ThreeElementPush_5_10_0" end time: Feb 24 01:55 UTC
"HeapTest.ThreeElementPush_5_10_0" time elapsed: 00:00:00
----------------------------------------------------------

31/60 Testing: HeapTest.ThreeElementPush_10_0_5
31/60 Test: HeapTest.ThreeElementPush_10_0_5
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-echen606/hw3/hw3_stu_tests/heap_tests/heap_tests" "--gtest_filter=HeapTest.ThreeElementPush_10_0_5"
Directory: /work/hw-echen606/hw3/hw3_stu_tests/heap_tests
"HeapTest.ThreeElementPush_10_0_5" start time: Feb 24 01:55 UTC
Output:
----------------------------------------------------------
==128== Memcheck, a memory error detector
==128== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==128== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==128== Command: /work/hw-echen606/hw3/hw3_stu_tests/heap_tests/heap_tests --gtest_filter=HeapTest.ThreeElementPush_10_0_5
==128== 
Running main() from /build/googletest-K1TalW/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = HeapTest.ThreeElementPush_10_0_5
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from HeapTest
[ RUN      ] HeapTest.ThreeElementPush_10_0_5
[       OK ] HeapTest.ThreeElementPush_10_0_5 (7 ms)
[----------] 1 test from HeapTest (9 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (16 ms total)
[  PASSED  ] 1 test.
==128== 
==128== HEAP SUMMARY:
==128==     in use at exit: 0 bytes in 0 blocks
==128==   total heap usage: 460 allocs, 460 frees, 132,220 bytes allocated
==128== 
==128== All heap blocks were freed -- no leaks are possible
==128== 
==128== For lists of detected and suppressed errors, rerun with: -s
==128== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.42 sec
----------------------------------------------------------
Test Passed.
"HeapTest.ThreeElementPush_10_0_5" end time: Feb 24 01:55 UTC
"HeapTest.ThreeElementPush_10_0_5" time elapsed: 00:00:00
----------------------------------------------------------

32/60 Testing: HeapTest.ThreeElementPush_10_5_0
32/60 Test: HeapTest.ThreeElementPush_10_5_0
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-echen606/hw3/hw3_stu_tests/heap_tests/heap_tests" "--gtest_filter=HeapTest.ThreeElementPush_10_5_0"
Directory: /work/hw-echen606/hw3/hw3_stu_tests/heap_tests
"HeapTest.ThreeElementPush_10_5_0" start time: Feb 24 01:55 UTC
Output:
----------------------------------------------------------
==129== Memcheck, a memory error detector
==129== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==129== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==129== Command: /work/hw-echen606/hw3/hw3_stu_tests/heap_tests/heap_tests --gtest_filter=HeapTest.ThreeElementPush_10_5_0
==129== 
Running main() from /build/googletest-K1TalW/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = HeapTest.ThreeElementPush_10_5_0
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from HeapTest
[ RUN      ] HeapTest.ThreeElementPush_10_5_0
[       OK ] HeapTest.ThreeElementPush_10_5_0 (7 ms)
[----------] 1 test from HeapTest (9 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (16 ms total)
[  PASSED  ] 1 test.
==129== 
==129== HEAP SUMMARY:
==129==     in use at exit: 0 bytes in 0 blocks
==129==   total heap usage: 460 allocs, 460 frees, 132,220 bytes allocated
==129== 
==129== All heap blocks were freed -- no leaks are possible
==129== 
==129== For lists of detected and suppressed errors, rerun with: -s
==129== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.42 sec
----------------------------------------------------------
Test Passed.
"HeapTest.ThreeElementPush_10_5_0" end time: Feb 24 01:55 UTC
"HeapTest.ThreeElementPush_10_5_0" time elapsed: 00:00:00
----------------------------------------------------------

33/60 Testing: HeapTest.GreaterComparator
33/60 Test: HeapTest.GreaterComparator
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-echen606/hw3/hw3_stu_tests/heap_tests/heap_tests" "--gtest_filter=HeapTest.GreaterComparator"
Directory: /work/hw-echen606/hw3/hw3_stu_tests/heap_tests
"HeapTest.GreaterComparator" start time: Feb 24 01:55 UTC
Output:
----------------------------------------------------------
==130== Memcheck, a memory error detector
==130== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==130== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==130== Command: /work/hw-echen606/hw3/hw3_stu_tests/heap_tests/heap_tests --gtest_filter=HeapTest.GreaterComparator
==130== 
Running main() from /build/googletest-K1TalW/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = HeapTest.GreaterComparator
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from HeapTest
[ RUN      ] HeapTest.GreaterComparator
[       OK ] HeapTest.GreaterComparator (7 ms)
[----------] 1 test from HeapTest (8 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (15 ms total)
[  PASSED  ] 1 test.
==130== 
==130== HEAP SUMMARY:
==130==     in use at exit: 0 bytes in 0 blocks
==130==   total heap usage: 460 allocs, 460 frees, 132,124 bytes allocated
==130== 
==130== All heap blocks were freed -- no leaks are possible
==130== 
==130== For lists of detected and suppressed errors, rerun with: -s
==130== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.42 sec
----------------------------------------------------------
Test Passed.
"HeapTest.GreaterComparator" end time: Feb 24 01:55 UTC
"HeapTest.GreaterComparator" time elapsed: 00:00:00
----------------------------------------------------------

34/60 Testing: HeapTest.StringStorage
34/60 Test: HeapTest.StringStorage
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-echen606/hw3/hw3_stu_tests/heap_tests/heap_tests" "--gtest_filter=HeapTest.StringStorage"
Directory: /work/hw-echen606/hw3/hw3_stu_tests/heap_tests
"HeapTest.StringStorage" start time: Feb 24 01:55 UTC
Output:
----------------------------------------------------------
==131== Memcheck, a memory error detector
==131== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==131== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==131== Command: /work/hw-echen606/hw3/hw3_stu_tests/heap_tests/heap_tests --gtest_filter=HeapTest.StringStorage
==131== 
Running main() from /build/googletest-K1TalW/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = HeapTest.StringStorage
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from HeapTest
[ RUN      ] HeapTest.StringStorage
[       OK ] HeapTest.StringStorage (6 ms)
[----------] 1 test from HeapTest (7 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (14 ms total)
[  PASSED  ] 1 test.
==131== 
==131== HEAP SUMMARY:
==131==     in use at exit: 0 bytes in 0 blocks
==131==   total heap usage: 460 allocs, 460 frees, 132,292 bytes allocated
==131== 
==131== All heap blocks were freed -- no leaks are possible
==131== 
==131== For lists of detected and suppressed errors, rerun with: -s
==131== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.42 sec
----------------------------------------------------------
Test Passed.
"HeapTest.StringStorage" end time: Feb 24 01:55 UTC
"HeapTest.StringStorage" time elapsed: 00:00:00
----------------------------------------------------------

35/60 Testing: HeapTest.FiveElementPush_TrinaryHeap
35/60 Test: HeapTest.FiveElementPush_TrinaryHeap
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-echen606/hw3/hw3_stu_tests/heap_tests/heap_tests" "--gtest_filter=HeapTest.FiveElementPush_TrinaryHeap"
Directory: /work/hw-echen606/hw3/hw3_stu_tests/heap_tests
"HeapTest.FiveElementPush_TrinaryHeap" start time: Feb 24 01:55 UTC
Output:
----------------------------------------------------------
==132== Memcheck, a memory error detector
==132== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==132== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==132== Command: /work/hw-echen606/hw3/hw3_stu_tests/heap_tests/heap_tests --gtest_filter=HeapTest.FiveElementPush_TrinaryHeap
==132== 
Running main() from /build/googletest-K1TalW/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = HeapTest.FiveElementPush_TrinaryHeap
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from HeapTest
[ RUN      ] HeapTest.FiveElementPush_TrinaryHeap
[       OK ] HeapTest.FiveElementPush_TrinaryHeap (7 ms)
[----------] 1 test from HeapTest (9 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (16 ms total)
[  PASSED  ] 1 test.
==132== 
==132== HEAP SUMMARY:
==132==     in use at exit: 0 bytes in 0 blocks
==132==   total heap usage: 461 allocs, 461 frees, 132,388 bytes allocated
==132== 
==132== All heap blocks were freed -- no leaks are possible
==132== 
==132== For lists of detected and suppressed errors, rerun with: -s
==132== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.42 sec
----------------------------------------------------------
Test Passed.
"HeapTest.FiveElementPush_TrinaryHeap" end time: Feb 24 01:55 UTC
"HeapTest.FiveElementPush_TrinaryHeap" time elapsed: 00:00:00
----------------------------------------------------------

36/60 Testing: HeapTest.SixElementPush_QuaternaryHeap
36/60 Test: HeapTest.SixElementPush_QuaternaryHeap
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-echen606/hw3/hw3_stu_tests/heap_tests/heap_tests" "--gtest_filter=HeapTest.SixElementPush_QuaternaryHeap"
Directory: /work/hw-echen606/hw3/hw3_stu_tests/heap_tests
"HeapTest.SixElementPush_QuaternaryHeap" start time: Feb 24 01:55 UTC
Output:
----------------------------------------------------------
==133== Memcheck, a memory error detector
==133== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==133== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==133== Command: /work/hw-echen606/hw3/hw3_stu_tests/heap_tests/heap_tests --gtest_filter=HeapTest.SixElementPush_QuaternaryHeap
==133== 
Running main() from /build/googletest-K1TalW/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = HeapTest.SixElementPush_QuaternaryHeap
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from HeapTest
[ RUN      ] HeapTest.SixElementPush_QuaternaryHeap
[       OK ] HeapTest.SixElementPush_QuaternaryHeap (8 ms)
[----------] 1 test from HeapTest (9 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (16 ms total)
[  PASSED  ] 1 test.
==133== 
==133== HEAP SUMMARY:
==133==     in use at exit: 0 bytes in 0 blocks
==133==   total heap usage: 461 allocs, 461 frees, 132,456 bytes allocated
==133== 
==133== All heap blocks were freed -- no leaks are possible
==133== 
==133== For lists of detected and suppressed errors, rerun with: -s
==133== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.42 sec
----------------------------------------------------------
Test Passed.
"HeapTest.SixElementPush_QuaternaryHeap" end time: Feb 24 01:55 UTC
"HeapTest.SixElementPush_QuaternaryHeap" time elapsed: 00:00:00
----------------------------------------------------------

37/60 Testing: HeapStress.50x50RandomElements_BinaryHeap
37/60 Test: HeapStress.50x50RandomElements_BinaryHeap
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-echen606/hw3/hw3_stu_tests/heap_tests/heap_tests" "--gtest_filter=HeapStress.50x50RandomElements_BinaryHeap"
Directory: /work/hw-echen606/hw3/hw3_stu_tests/heap_tests
"HeapStress.50x50RandomElements_BinaryHeap" start time: Feb 24 01:55 UTC
Output:
----------------------------------------------------------
==134== Memcheck, a memory error detector
==134== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==134== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==134== Command: /work/hw-echen606/hw3/hw3_stu_tests/heap_tests/heap_tests --gtest_filter=HeapStress.50x50RandomElements_BinaryHeap
==134== 
Running main() from /build/googletest-K1TalW/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = HeapStress.50x50RandomElements_BinaryHeap
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from HeapStress
[ RUN      ] HeapStress.50x50RandomElements_BinaryHeap
[       OK ] HeapStress.50x50RandomElements_BinaryHeap (98 ms)
[----------] 1 test from HeapStress (99 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (107 ms total)
[  PASSED  ] 1 test.
==134== 
==134== HEAP SUMMARY:
==134==     in use at exit: 0 bytes in 0 blocks
==134==   total heap usage: 958 allocs, 958 frees, 180,090 bytes allocated
==134== 
==134== All heap blocks were freed -- no leaks are possible
==134== 
==134== For lists of detected and suppressed errors, rerun with: -s
==134== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.51 sec
----------------------------------------------------------
Test Passed.
"HeapStress.50x50RandomElements_BinaryHeap" end time: Feb 24 01:55 UTC
"HeapStress.50x50RandomElements_BinaryHeap" time elapsed: 00:00:00
----------------------------------------------------------

38/60 Testing: HeapStress.50x50RandomElements_QuaternaryHeap
38/60 Test: HeapStress.50x50RandomElements_QuaternaryHeap
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-echen606/hw3/hw3_stu_tests/heap_tests/heap_tests" "--gtest_filter=HeapStress.50x50RandomElements_QuaternaryHeap"
Directory: /work/hw-echen606/hw3/hw3_stu_tests/heap_tests
"HeapStress.50x50RandomElements_QuaternaryHeap" start time: Feb 24 01:55 UTC
Output:
----------------------------------------------------------
==135== Memcheck, a memory error detector
==135== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==135== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==135== Command: /work/hw-echen606/hw3/hw3_stu_tests/heap_tests/heap_tests --gtest_filter=HeapStress.50x50RandomElements_QuaternaryHeap
==135== 
Running main() from /build/googletest-K1TalW/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = HeapStress.50x50RandomElements_QuaternaryHeap
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from HeapStress
[ RUN      ] HeapStress.50x50RandomElements_QuaternaryHeap
[       OK ] HeapStress.50x50RandomElements_QuaternaryHeap (94 ms)
[----------] 1 test from HeapStress (95 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (103 ms total)
[  PASSED  ] 1 test.
==135== 
==135== HEAP SUMMARY:
==135==     in use at exit: 0 bytes in 0 blocks
==135==   total heap usage: 958 allocs, 958 frees, 180,226 bytes allocated
==135== 
==135== All heap blocks were freed -- no leaks are possible
==135== 
==135== For lists of detected and suppressed errors, rerun with: -s
==135== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.51 sec
----------------------------------------------------------
Test Passed.
"HeapStress.50x50RandomElements_QuaternaryHeap" end time: Feb 24 01:55 UTC
"HeapStress.50x50RandomElements_QuaternaryHeap" time elapsed: 00:00:00
----------------------------------------------------------

39/60 Testing: HeapStress.50x50RandomElements_DodecenaryHeap
39/60 Test: HeapStress.50x50RandomElements_DodecenaryHeap
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-echen606/hw3/hw3_stu_tests/heap_tests/heap_tests" "--gtest_filter=HeapStress.50x50RandomElements_DodecenaryHeap"
Directory: /work/hw-echen606/hw3/hw3_stu_tests/heap_tests
"HeapStress.50x50RandomElements_DodecenaryHeap" start time: Feb 24 01:55 UTC
Output:
----------------------------------------------------------
==136== Memcheck, a memory error detector
==136== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==136== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==136== Command: /work/hw-echen606/hw3/hw3_stu_tests/heap_tests/heap_tests --gtest_filter=HeapStress.50x50RandomElements_DodecenaryHeap
==136== 
Running main() from /build/googletest-K1TalW/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = HeapStress.50x50RandomElements_DodecenaryHeap
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from HeapStress
[ RUN      ] HeapStress.50x50RandomElements_DodecenaryHeap
[       OK ] HeapStress.50x50RandomElements_DodecenaryHeap (97 ms)
[----------] 1 test from HeapStress (100 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (107 ms total)
[  PASSED  ] 1 test.
==136== 
==136== HEAP SUMMARY:
==136==     in use at exit: 0 bytes in 0 blocks
==136==   total heap usage: 958 allocs, 958 frees, 180,226 bytes allocated
==136== 
==136== All heap blocks were freed -- no leaks are possible
==136== 
==136== For lists of detected and suppressed errors, rerun with: -s
==136== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.51 sec
----------------------------------------------------------
Test Passed.
"HeapStress.50x50RandomElements_DodecenaryHeap" end time: Feb 24 01:55 UTC
"HeapStress.50x50RandomElements_DodecenaryHeap" time elapsed: 00:00:00
----------------------------------------------------------

40/60 Testing: HeapStress.2x2000RandomElements_Binary
40/60 Test: HeapStress.2x2000RandomElements_Binary
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-echen606/hw3/hw3_stu_tests/heap_tests/heap_tests" "--gtest_filter=HeapStress.2x2000RandomElements_Binary"
Directory: /work/hw-echen606/hw3/hw3_stu_tests/heap_tests
"HeapStress.2x2000RandomElements_Binary" start time: Feb 24 01:55 UTC
Output:
----------------------------------------------------------
==137== Memcheck, a memory error detector
==137== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==137== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==137== Command: /work/hw-echen606/hw3/hw3_stu_tests/heap_tests/heap_tests --gtest_filter=HeapStress.2x2000RandomElements_Binary
==137== 
Running main() from /build/googletest-K1TalW/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = HeapStress.2x2000RandomElements_Binary
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from HeapStress
[ RUN      ] HeapStress.2x2000RandomElements_Binary
[       OK ] HeapStress.2x2000RandomElements_Binary (147 ms)
[----------] 1 test from HeapStress (149 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (156 ms total)
[  PASSED  ] 1 test.
==137== 
==137== HEAP SUMMARY:
==137==     in use at exit: 0 bytes in 0 blocks
==137==   total heap usage: 488 allocs, 488 frees, 197,236 bytes allocated
==137== 
==137== All heap blocks were freed -- no leaks are possible
==137== 
==137== For lists of detected and suppressed errors, rerun with: -s
==137== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.56 sec
----------------------------------------------------------
Test Passed.
"HeapStress.2x2000RandomElements_Binary" end time: Feb 24 01:55 UTC
"HeapStress.2x2000RandomElements_Binary" time elapsed: 00:00:00
----------------------------------------------------------

41/60 Testing: Heuristic.DirectHeuristic0
41/60 Test: Heuristic.DirectHeuristic0
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests" "--gtest_filter=Heuristic.DirectHeuristic0"
Directory: /work/hw-echen606/hw3/hw3_stu_tests/rh_tests
"Heuristic.DirectHeuristic0" start time: Feb 24 01:55 UTC
Output:
----------------------------------------------------------
==138== Memcheck, a memory error detector
==138== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==138== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==138== Command: /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests --gtest_filter=Heuristic.DirectHeuristic0
==138== 
Running main() from /build/googletest-K1TalW/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = Heuristic.DirectHeuristic0
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from Heuristic
[ RUN      ] Heuristic.DirectHeuristic0
[       OK ] Heuristic.DirectHeuristic0 (17 ms)
[----------] 1 test from Heuristic (20 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (27 ms total)
[  PASSED  ] 1 test.
==138== 
==138== HEAP SUMMARY:
==138==     in use at exit: 0 bytes in 0 blocks
==138==   total heap usage: 450 allocs, 450 frees, 131,360 bytes allocated
==138== 
==138== All heap blocks were freed -- no leaks are possible
==138== 
==138== For lists of detected and suppressed errors, rerun with: -s
==138== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.44 sec
----------------------------------------------------------
Test Passed.
"Heuristic.DirectHeuristic0" end time: Feb 24 01:55 UTC
"Heuristic.DirectHeuristic0" time elapsed: 00:00:00
----------------------------------------------------------

42/60 Testing: Heuristic.DirectHeuristic1
42/60 Test: Heuristic.DirectHeuristic1
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests" "--gtest_filter=Heuristic.DirectHeuristic1"
Directory: /work/hw-echen606/hw3/hw3_stu_tests/rh_tests
"Heuristic.DirectHeuristic1" start time: Feb 24 01:55 UTC
Output:
----------------------------------------------------------
==139== Memcheck, a memory error detector
==139== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==139== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==139== Command: /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests --gtest_filter=Heuristic.DirectHeuristic1
==139== 
Running main() from /build/googletest-K1TalW/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = Heuristic.DirectHeuristic1
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from Heuristic
[ RUN      ] Heuristic.DirectHeuristic1
[       OK ] Heuristic.DirectHeuristic1 (20 ms)
[----------] 1 test from Heuristic (21 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (28 ms total)
[  PASSED  ] 1 test.
==139== 
==139== HEAP SUMMARY:
==139==     in use at exit: 0 bytes in 0 blocks
==139==   total heap usage: 449 allocs, 449 frees, 131,272 bytes allocated
==139== 
==139== All heap blocks were freed -- no leaks are possible
==139== 
==139== For lists of detected and suppressed errors, rerun with: -s
==139== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.45 sec
----------------------------------------------------------
Test Passed.
"Heuristic.DirectHeuristic1" end time: Feb 24 01:55 UTC
"Heuristic.DirectHeuristic1" time elapsed: 00:00:00
----------------------------------------------------------

43/60 Testing: Heuristic.DirectHeuristic234
43/60 Test: Heuristic.DirectHeuristic234
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests" "--gtest_filter=Heuristic.DirectHeuristic234"
Directory: /work/hw-echen606/hw3/hw3_stu_tests/rh_tests
"Heuristic.DirectHeuristic234" start time: Feb 24 01:55 UTC
Output:
----------------------------------------------------------
==140== Memcheck, a memory error detector
==140== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==140== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==140== Command: /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests --gtest_filter=Heuristic.DirectHeuristic234
==140== 
Running main() from /build/googletest-K1TalW/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = Heuristic.DirectHeuristic234
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from Heuristic
[ RUN      ] Heuristic.DirectHeuristic234
[       OK ] Heuristic.DirectHeuristic234 (20 ms)
[----------] 1 test from Heuristic (22 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (29 ms total)
[  PASSED  ] 1 test.
==140== 
==140== HEAP SUMMARY:
==140==     in use at exit: 0 bytes in 0 blocks
==140==   total heap usage: 475 allocs, 475 frees, 132,648 bytes allocated
==140== 
==140== All heap blocks were freed -- no leaks are possible
==140== 
==140== For lists of detected and suppressed errors, rerun with: -s
==140== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.44 sec
----------------------------------------------------------
Test Passed.
"Heuristic.DirectHeuristic234" end time: Feb 24 01:55 UTC
"Heuristic.DirectHeuristic234" time elapsed: 00:00:00
----------------------------------------------------------

44/60 Testing: Heuristic.IndirectHeuristic0
44/60 Test: Heuristic.IndirectHeuristic0
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests" "--gtest_filter=Heuristic.IndirectHeuristic0"
Directory: /work/hw-echen606/hw3/hw3_stu_tests/rh_tests
"Heuristic.IndirectHeuristic0" start time: Feb 24 01:55 UTC
Output:
----------------------------------------------------------
==141== Memcheck, a memory error detector
==141== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==141== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==141== Command: /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests --gtest_filter=Heuristic.IndirectHeuristic0
==141== 
Running main() from /build/googletest-K1TalW/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = Heuristic.IndirectHeuristic0
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from Heuristic
[ RUN      ] Heuristic.IndirectHeuristic0
[       OK ] Heuristic.IndirectHeuristic0 (17 ms)
[----------] 1 test from Heuristic (20 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (26 ms total)
[  PASSED  ] 1 test.
==141== 
==141== HEAP SUMMARY:
==141==     in use at exit: 0 bytes in 0 blocks
==141==   total heap usage: 450 allocs, 450 frees, 131,374 bytes allocated
==141== 
==141== All heap blocks were freed -- no leaks are possible
==141== 
==141== For lists of detected and suppressed errors, rerun with: -s
==141== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.44 sec
----------------------------------------------------------
Test Passed.
"Heuristic.IndirectHeuristic0" end time: Feb 24 01:55 UTC
"Heuristic.IndirectHeuristic0" time elapsed: 00:00:00
----------------------------------------------------------

45/60 Testing: Heuristic.IndirectHeuristic1
45/60 Test: Heuristic.IndirectHeuristic1
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests" "--gtest_filter=Heuristic.IndirectHeuristic1"
Directory: /work/hw-echen606/hw3/hw3_stu_tests/rh_tests
"Heuristic.IndirectHeuristic1" start time: Feb 24 01:55 UTC
Output:
----------------------------------------------------------
==142== Memcheck, a memory error detector
==142== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==142== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==142== Command: /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests --gtest_filter=Heuristic.IndirectHeuristic1
==142== 
Running main() from /build/googletest-K1TalW/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = Heuristic.IndirectHeuristic1
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from Heuristic
[ RUN      ] Heuristic.IndirectHeuristic1
[       OK ] Heuristic.IndirectHeuristic1 (20 ms)
[----------] 1 test from Heuristic (23 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (30 ms total)
[  PASSED  ] 1 test.
==142== 
==142== HEAP SUMMARY:
==142==     in use at exit: 0 bytes in 0 blocks
==142==   total heap usage: 449 allocs, 449 frees, 131,286 bytes allocated
==142== 
==142== All heap blocks were freed -- no leaks are possible
==142== 
==142== For lists of detected and suppressed errors, rerun with: -s
==142== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.44 sec
----------------------------------------------------------
Test Passed.
"Heuristic.IndirectHeuristic1" end time: Feb 24 01:55 UTC
"Heuristic.IndirectHeuristic1" time elapsed: 00:00:00
----------------------------------------------------------

46/60 Testing: Heuristic.IndirectHeuristic234
46/60 Test: Heuristic.IndirectHeuristic234
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests" "--gtest_filter=Heuristic.IndirectHeuristic234"
Directory: /work/hw-echen606/hw3/hw3_stu_tests/rh_tests
"Heuristic.IndirectHeuristic234" start time: Feb 24 01:55 UTC
Output:
----------------------------------------------------------
==143== Memcheck, a memory error detector
==143== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==143== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==143== Command: /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests --gtest_filter=Heuristic.IndirectHeuristic234
==143== 
Running main() from /build/googletest-K1TalW/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = Heuristic.IndirectHeuristic234
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from Heuristic
[ RUN      ] Heuristic.IndirectHeuristic234
[       OK ] Heuristic.IndirectHeuristic234 (22 ms)
[----------] 1 test from Heuristic (24 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (31 ms total)
[  PASSED  ] 1 test.
==143== 
==143== HEAP SUMMARY:
==143==     in use at exit: 0 bytes in 0 blocks
==143==   total heap usage: 477 allocs, 477 frees, 132,742 bytes allocated
==143== 
==143== All heap blocks were freed -- no leaks are possible
==143== 
==143== For lists of detected and suppressed errors, rerun with: -s
==143== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.44 sec
----------------------------------------------------------
Test Passed.
"Heuristic.IndirectHeuristic234" end time: Feb 24 01:55 UTC
"Heuristic.IndirectHeuristic234" time elapsed: 00:00:00
----------------------------------------------------------

47/60 Testing: Heuristic.IndirectHeuristicFalsePositives
47/60 Test: Heuristic.IndirectHeuristicFalsePositives
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests" "--gtest_filter=Heuristic.IndirectHeuristicFalsePositives"
Directory: /work/hw-echen606/hw3/hw3_stu_tests/rh_tests
"Heuristic.IndirectHeuristicFalsePositives" start time: Feb 24 01:55 UTC
Output:
----------------------------------------------------------
==144== Memcheck, a memory error detector
==144== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==144== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==144== Command: /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests --gtest_filter=Heuristic.IndirectHeuristicFalsePositives
==144== 
Running main() from /build/googletest-K1TalW/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = Heuristic.IndirectHeuristicFalsePositives
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from Heuristic
[ RUN      ] Heuristic.IndirectHeuristicFalsePositives
[       OK ] Heuristic.IndirectHeuristicFalsePositives (22 ms)
[----------] 1 test from Heuristic (23 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (30 ms total)
[  PASSED  ] 1 test.
==144== 
==144== HEAP SUMMARY:
==144==     in use at exit: 0 bytes in 0 blocks
==144==   total heap usage: 460 allocs, 460 frees, 132,091 bytes allocated
==144== 
==144== All heap blocks were freed -- no leaks are possible
==144== 
==144== For lists of detected and suppressed errors, rerun with: -s
==144== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.44 sec
----------------------------------------------------------
Test Passed.
"Heuristic.IndirectHeuristicFalsePositives" end time: Feb 24 01:55 UTC
"Heuristic.IndirectHeuristicFalsePositives" time elapsed: 00:00:00
----------------------------------------------------------

48/60 Testing: Heuristic.IndirectHeuristicTruePositives
48/60 Test: Heuristic.IndirectHeuristicTruePositives
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests" "--gtest_filter=Heuristic.IndirectHeuristicTruePositives"
Directory: /work/hw-echen606/hw3/hw3_stu_tests/rh_tests
"Heuristic.IndirectHeuristicTruePositives" start time: Feb 24 01:55 UTC
Output:
----------------------------------------------------------
==145== Memcheck, a memory error detector
==145== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==145== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==145== Command: /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests --gtest_filter=Heuristic.IndirectHeuristicTruePositives
==145== 
Running main() from /build/googletest-K1TalW/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = Heuristic.IndirectHeuristicTruePositives
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from Heuristic
[ RUN      ] Heuristic.IndirectHeuristicTruePositives
[       OK ] Heuristic.IndirectHeuristicTruePositives (24 ms)
[----------] 1 test from Heuristic (26 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (33 ms total)
[  PASSED  ] 1 test.
==145== 
==145== HEAP SUMMARY:
==145==     in use at exit: 0 bytes in 0 blocks
==145==   total heap usage: 559 allocs, 559 frees, 137,334 bytes allocated
==145== 
==145== All heap blocks were freed -- no leaks are possible
==145== 
==145== For lists of detected and suppressed errors, rerun with: -s
==145== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.46 sec
----------------------------------------------------------
Test Passed.
"Heuristic.IndirectHeuristicTruePositives" end time: Feb 24 01:55 UTC
"Heuristic.IndirectHeuristicTruePositives" time elapsed: 00:00:00
----------------------------------------------------------

49/60 Testing: Heuristic.IndirectHeuristicAboveBelow
49/60 Test: Heuristic.IndirectHeuristicAboveBelow
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests" "--gtest_filter=Heuristic.IndirectHeuristicAboveBelow"
Directory: /work/hw-echen606/hw3/hw3_stu_tests/rh_tests
"Heuristic.IndirectHeuristicAboveBelow" start time: Feb 24 01:55 UTC
Output:
----------------------------------------------------------
==146== Memcheck, a memory error detector
==146== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==146== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==146== Command: /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests --gtest_filter=Heuristic.IndirectHeuristicAboveBelow
==146== 
Running main() from /build/googletest-K1TalW/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = Heuristic.IndirectHeuristicAboveBelow
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from Heuristic
[ RUN      ] Heuristic.IndirectHeuristicAboveBelow
[       OK ] Heuristic.IndirectHeuristicAboveBelow (22 ms)
[----------] 1 test from Heuristic (23 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (30 ms total)
[  PASSED  ] 1 test.
==146== 
==146== HEAP SUMMARY:
==146==     in use at exit: 0 bytes in 0 blocks
==146==   total heap usage: 492 allocs, 492 frees, 133,649 bytes allocated
==146== 
==146== All heap blocks were freed -- no leaks are possible
==146== 
==146== For lists of detected and suppressed errors, rerun with: -s
==146== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.45 sec
----------------------------------------------------------
Test Passed.
"Heuristic.IndirectHeuristicAboveBelow" end time: Feb 24 01:55 UTC
"Heuristic.IndirectHeuristicAboveBelow" time elapsed: 00:00:00
----------------------------------------------------------

50/60 Testing: OperatorLT.Nominal1
50/60 Test: OperatorLT.Nominal1
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests" "--gtest_filter=OperatorLT.Nominal1"
Directory: /work/hw-echen606/hw3/hw3_stu_tests/rh_tests
"OperatorLT.Nominal1" start time: Feb 24 01:55 UTC
Output:
----------------------------------------------------------
==147== Memcheck, a memory error detector
==147== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==147== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==147== Command: /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests --gtest_filter=OperatorLT.Nominal1
==147== 
Running main() from /build/googletest-K1TalW/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = OperatorLT.Nominal1
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from OperatorLT
[ RUN      ] OperatorLT.Nominal1
[       OK ] OperatorLT.Nominal1 (22 ms)
[----------] 1 test from OperatorLT (24 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (31 ms total)
[  PASSED  ] 1 test.
==147== 
==147== HEAP SUMMARY:
==147==     in use at exit: 0 bytes in 0 blocks
==147==   total heap usage: 498 allocs, 498 frees, 138,915 bytes allocated
==147== 
==147== All heap blocks were freed -- no leaks are possible
==147== 
==147== For lists of detected and suppressed errors, rerun with: -s
==147== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.45 sec
----------------------------------------------------------
Test Passed.
"OperatorLT.Nominal1" end time: Feb 24 01:55 UTC
"OperatorLT.Nominal1" time elapsed: 00:00:00
----------------------------------------------------------

51/60 Testing: Move.ConstructorAndScore
51/60 Test: Move.ConstructorAndScore
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests" "--gtest_filter=Move.ConstructorAndScore"
Directory: /work/hw-echen606/hw3/hw3_stu_tests/rh_tests
"Move.ConstructorAndScore" start time: Feb 24 01:55 UTC
Output:
----------------------------------------------------------
==148== Memcheck, a memory error detector
==148== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==148== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==148== Command: /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests --gtest_filter=Move.ConstructorAndScore
==148== 
Running main() from /build/googletest-K1TalW/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = Move.ConstructorAndScore
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from Move
[ RUN      ] Move.ConstructorAndScore
[       OK ] Move.ConstructorAndScore (26 ms)
[----------] 1 test from Move (29 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (36 ms total)
[  PASSED  ] 1 test.
==148== 
==148== HEAP SUMMARY:
==148==     in use at exit: 1,216 bytes in 28 blocks
==148==   total heap usage: 448 allocs, 420 frees, 131,028 bytes allocated
==148== 
==148== 96 bytes in 1 blocks are definitely lost in loss record 9 of 14
==148==    at 0x484A3C4: operator new(unsigned long) (in /usr/lib/aarch64-linux-gnu/valgrind/vgpreload_memcheck-arm64-linux.so)
==148==    by 0x134157: Move::Move(std::pair<char, int> const&, Board*, Move*) (move.cpp:19)
==148==    by 0x118EB3: Move_ConstructorAndScore_Test::TestBody() (rh_tests.cpp:530)
==148==    by 0x163A3F: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==148==    by 0x157C27: testing::Test::Run() (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==148==    by 0x157D7B: testing::TestInfo::Run() (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==148==    by 0x157E57: testing::TestSuite::Run() (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==148==    by 0x1583A3: testing::internal::UnitTestImpl::RunAllTests() (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==148==    by 0x163FD7: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==148==    by 0x1585EB: testing::UnitTest::Run() (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==148==    by 0x114F47: main (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==148== 
==148== 556 (96 direct, 460 indirect) bytes in 1 blocks are definitely lost in loss record 13 of 14
==148==    at 0x484A3C4: operator new(unsigned long) (in /usr/lib/aarch64-linux-gnu/valgrind/vgpreload_memcheck-arm64-linux.so)
==148==    by 0x118CEB: Move_ConstructorAndScore_Test::TestBody() (rh_tests.cpp:520)
==148==    by 0x163A3F: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==148==    by 0x157C27: testing::Test::Run() (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==148==    by 0x157D7B: testing::TestInfo::Run() (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==148==    by 0x157E57: testing::TestSuite::Run() (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==148==    by 0x1583A3: testing::internal::UnitTestImpl::RunAllTests() (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==148==    by 0x163FD7: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==148==    by 0x1585EB: testing::UnitTest::Run() (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==148==    by 0x114F47: main (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==148== 
==148== 564 (96 direct, 468 indirect) bytes in 1 blocks are definitely lost in loss record 14 of 14
==148==    at 0x484A3C4: operator new(unsigned long) (in /usr/lib/aarch64-linux-gnu/valgrind/vgpreload_memcheck-arm64-linux.so)
==148==    by 0x118E6F: Move_ConstructorAndScore_Test::TestBody() (rh_tests.cpp:527)
==148==    by 0x163A3F: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==148==    by 0x157C27: testing::Test::Run() (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==148==    by 0x157D7B: testing::TestInfo::Run() (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==148==    by 0x157E57: testing::TestSuite::Run() (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==148==    by 0x1583A3: testing::internal::UnitTestImpl::RunAllTests() (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==148==    by 0x163FD7: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==148==    by 0x1585EB: testing::UnitTest::Run() (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==148==    by 0x114F47: main (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==148== 
==148== LEAK SUMMARY:
==148==    definitely lost: 288 bytes in 3 blocks
==148==    indirectly lost: 928 bytes in 25 blocks
==148==      possibly lost: 0 bytes in 0 blocks
==148==    still reachable: 0 bytes in 0 blocks
==148==         suppressed: 0 bytes in 0 blocks
==148== 
==148== For lists of detected and suppressed errors, rerun with: -s
==148== ERROR SUMMARY: 3 errors from 3 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.45 sec
----------------------------------------------------------
Test Passed.
"Move.ConstructorAndScore" end time: Feb 24 01:55 UTC
"Move.ConstructorAndScore" time elapsed: 00:00:00
----------------------------------------------------------

52/60 Testing: BoardTest.PotentialMoves1
52/60 Test: BoardTest.PotentialMoves1
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests" "--gtest_filter=BoardTest.PotentialMoves1"
Directory: /work/hw-echen606/hw3/hw3_stu_tests/rh_tests
"BoardTest.PotentialMoves1" start time: Feb 24 01:55 UTC
Output:
----------------------------------------------------------
==149== Memcheck, a memory error detector
==149== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==149== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==149== Command: /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests --gtest_filter=BoardTest.PotentialMoves1
==149== 
Running main() from /build/googletest-K1TalW/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = BoardTest.PotentialMoves1
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from BoardTest
[ RUN      ] BoardTest.PotentialMoves1
[       OK ] BoardTest.PotentialMoves1 (21 ms)
[----------] 1 test from BoardTest (24 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (31 ms total)
[  PASSED  ] 1 test.
==149== 
==149== HEAP SUMMARY:
==149==     in use at exit: 0 bytes in 0 blocks
==149==   total heap usage: 433 allocs, 433 frees, 130,957 bytes allocated
==149== 
==149== All heap blocks were freed -- no leaks are possible
==149== 
==149== For lists of detected and suppressed errors, rerun with: -s
==149== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.45 sec
----------------------------------------------------------
Test Passed.
"BoardTest.PotentialMoves1" end time: Feb 24 01:55 UTC
"BoardTest.PotentialMoves1" time elapsed: 00:00:00
----------------------------------------------------------

53/60 Testing: BoardTest.PotentialMoves2
53/60 Test: BoardTest.PotentialMoves2
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests" "--gtest_filter=BoardTest.PotentialMoves2"
Directory: /work/hw-echen606/hw3/hw3_stu_tests/rh_tests
"BoardTest.PotentialMoves2" start time: Feb 24 01:55 UTC
Output:
----------------------------------------------------------
==150== Memcheck, a memory error detector
==150== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==150== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==150== Command: /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests --gtest_filter=BoardTest.PotentialMoves2
==150== 
Running main() from /build/googletest-K1TalW/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = BoardTest.PotentialMoves2
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from BoardTest
[ RUN      ] BoardTest.PotentialMoves2
[       OK ] BoardTest.PotentialMoves2 (24 ms)
[----------] 1 test from BoardTest (25 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (32 ms total)
[  PASSED  ] 1 test.
==150== 
==150== HEAP SUMMARY:
==150==     in use at exit: 0 bytes in 0 blocks
==150==   total heap usage: 439 allocs, 439 frees, 131,663 bytes allocated
==150== 
==150== All heap blocks were freed -- no leaks are possible
==150== 
==150== For lists of detected and suppressed errors, rerun with: -s
==150== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.45 sec
----------------------------------------------------------
Test Passed.
"BoardTest.PotentialMoves2" end time: Feb 24 01:55 UTC
"BoardTest.PotentialMoves2" time elapsed: 00:00:00
----------------------------------------------------------

54/60 Testing: BoardTest.NoPotentialMoves
54/60 Test: BoardTest.NoPotentialMoves
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests" "--gtest_filter=BoardTest.NoPotentialMoves"
Directory: /work/hw-echen606/hw3/hw3_stu_tests/rh_tests
"BoardTest.NoPotentialMoves" start time: Feb 24 01:55 UTC
Output:
----------------------------------------------------------
==151== Memcheck, a memory error detector
==151== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==151== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==151== Command: /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests --gtest_filter=BoardTest.NoPotentialMoves
==151== 
Running main() from /build/googletest-K1TalW/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = BoardTest.NoPotentialMoves
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from BoardTest
[ RUN      ] BoardTest.NoPotentialMoves
[       OK ] BoardTest.NoPotentialMoves (18 ms)
[----------] 1 test from BoardTest (20 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (27 ms total)
[  PASSED  ] 1 test.
==151== 
==151== HEAP SUMMARY:
==151==     in use at exit: 0 bytes in 0 blocks
==151==   total heap usage: 430 allocs, 430 frees, 130,679 bytes allocated
==151== 
==151== All heap blocks were freed -- no leaks are possible
==151== 
==151== For lists of detected and suppressed errors, rerun with: -s
==151== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.45 sec
----------------------------------------------------------
Test Passed.
"BoardTest.NoPotentialMoves" end time: Feb 24 01:55 UTC
"BoardTest.NoPotentialMoves" time elapsed: 00:00:00
----------------------------------------------------------

55/60 Testing: BoardTest.Undo1
55/60 Test: BoardTest.Undo1
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests" "--gtest_filter=BoardTest.Undo1"
Directory: /work/hw-echen606/hw3/hw3_stu_tests/rh_tests
"BoardTest.Undo1" start time: Feb 24 01:55 UTC
Output:
----------------------------------------------------------
==152== Memcheck, a memory error detector
==152== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==152== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==152== Command: /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests --gtest_filter=BoardTest.Undo1
==152== 
Running main() from /build/googletest-K1TalW/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = BoardTest.Undo1
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from BoardTest
[ RUN      ] BoardTest.Undo1
[       OK ] BoardTest.Undo1 (39 ms)
[----------] 1 test from BoardTest (41 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (48 ms total)
[  PASSED  ] 1 test.
==152== 
==152== HEAP SUMMARY:
==152==     in use at exit: 0 bytes in 0 blocks
==152==   total heap usage: 494 allocs, 494 frees, 141,193 bytes allocated
==152== 
==152== All heap blocks were freed -- no leaks are possible
==152== 
==152== For lists of detected and suppressed errors, rerun with: -s
==152== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.46 sec
----------------------------------------------------------
Test Passed.
"BoardTest.Undo1" end time: Feb 24 01:55 UTC
"BoardTest.Undo1" time elapsed: 00:00:00
----------------------------------------------------------

56/60 Testing: Solver.Basic
56/60 Test: Solver.Basic
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests" "--gtest_filter=Solver.Basic"
Directory: /work/hw-echen606/hw3/hw3_stu_tests/rh_tests
"Solver.Basic" start time: Feb 24 01:55 UTC
Output:
----------------------------------------------------------
==153== Memcheck, a memory error detector
==153== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==153== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==153== Command: /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests --gtest_filter=Solver.Basic
==153== 
Running main() from /build/googletest-K1TalW/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = Solver.Basic
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from Solver
[ RUN      ] Solver.Basic
[       OK ] Solver.Basic (141 ms)
[----------] 1 test from Solver (143 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (150 ms total)
[  PASSED  ] 1 test.
==153== 
==153== HEAP SUMMARY:
==153==     in use at exit: 45,032 bytes in 1,042 blocks
==153==   total heap usage: 4,264 allocs, 3,222 frees, 860,786 bytes allocated
==153== 
==153== 32 bytes in 1 blocks are definitely lost in loss record 6 of 31
==153==    at 0x484A3C4: operator new(unsigned long) (in /usr/lib/aarch64-linux-gnu/valgrind/vgpreload_memcheck-arm64-linux.so)
==153==    by 0x12BCCB: Solver::run() (solver.cpp:28)
==153==    by 0x11591F: runAndVerifySolution(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, Heuristic*, bool, unsigned long) (rh_tests.cpp:63)
==153==    by 0x11A303: Solver_Basic_Test::TestBody() (rh_tests.cpp:670)
==153==    by 0x163A3F: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==153==    by 0x157C27: testing::Test::Run() (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==153==    by 0x157D7B: testing::TestInfo::Run() (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==153==    by 0x157E57: testing::TestSuite::Run() (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==153==    by 0x1583A3: testing::internal::UnitTestImpl::RunAllTests() (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==153==    by 0x163FD7: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==153==    by 0x1585EB: testing::UnitTest::Run() (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==153==    by 0x114F47: main (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==153== 
==153== 1,032 (192 direct, 840 indirect) bytes in 2 blocks are definitely lost in loss record 11 of 31
==153==    at 0x484A3C4: operator new(unsigned long) (in /usr/lib/aarch64-linux-gnu/valgrind/vgpreload_memcheck-arm64-linux.so)
==153==    by 0x12BDF7: Solver::run() (solver.cpp:49)
==153==    by 0x11591F: runAndVerifySolution(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, Heuristic*, bool, unsigned long) (rh_tests.cpp:63)
==153==    by 0x11A1FB: Solver_Basic_Test::TestBody() (rh_tests.cpp:658)
==153==    by 0x163A3F: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==153==    by 0x157C27: testing::Test::Run() (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==153==    by 0x157D7B: testing::TestInfo::Run() (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==153==    by 0x157E57: testing::TestSuite::Run() (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==153==    by 0x1583A3: testing::internal::UnitTestImpl::RunAllTests() (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==153==    by 0x163FD7: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==153==    by 0x1585EB: testing::UnitTest::Run() (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==153==    by 0x114F47: main (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==153== 
==153== 1,048 (192 direct, 856 indirect) bytes in 2 blocks are definitely lost in loss record 12 of 31
==153==    at 0x484A3C4: operator new(unsigned long) (in /usr/lib/aarch64-linux-gnu/valgrind/vgpreload_memcheck-arm64-linux.so)
==153==    by 0x12BDF7: Solver::run() (solver.cpp:49)
==153==    by 0x11591F: runAndVerifySolution(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, Heuristic*, bool, unsigned long) (rh_tests.cpp:63)
==153==    by 0x11A0EF: Solver_Basic_Test::TestBody() (rh_tests.cpp:646)
==153==    by 0x163A3F: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==153==    by 0x157C27: testing::Test::Run() (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==153==    by 0x157D7B: testing::TestInfo::Run() (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==153==    by 0x157E57: testing::TestSuite::Run() (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==153==    by 0x1583A3: testing::internal::UnitTestImpl::RunAllTests() (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==153==    by 0x163FD7: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==153==    by 0x1585EB: testing::UnitTest::Run() (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==153==    by 0x114F47: main (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==153== 
==153== 1,144 (192 direct, 952 indirect) bytes in 2 blocks are definitely lost in loss record 13 of 31
==153==    at 0x484A3C4: operator new(unsigned long) (in /usr/lib/aarch64-linux-gnu/valgrind/vgpreload_memcheck-arm64-linux.so)
==153==    by 0x12BDF7: Solver::run() (solver.cpp:49)
==153==    by 0x11591F: runAndVerifySolution(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, Heuristic*, bool, unsigned long) (rh_tests.cpp:63)
==153==    by 0x11A40F: Solver_Basic_Test::TestBody() (rh_tests.cpp:683)
==153==    by 0x163A3F: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==153==    by 0x157C27: testing::Test::Run() (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==153==    by 0x157D7B: testing::TestInfo::Run() (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==153==    by 0x157E57: testing::TestSuite::Run() (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==153==    by 0x1583A3: testing::internal::UnitTestImpl::RunAllTests() (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==153==    by 0x163FD7: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==153==    by 0x1585EB: testing::UnitTest::Run() (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==153==    by 0x114F47: main (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==153== 
==153== 1,632 bytes in 17 blocks are definitely lost in loss record 15 of 31
==153==    at 0x484A3C4: operator new(unsigned long) (in /usr/lib/aarch64-linux-gnu/valgrind/vgpreload_memcheck-arm64-linux.so)
==153==    by 0x134157: Move::Move(std::pair<char, int> const&, Board*, Move*) (move.cpp:19)
==153==    by 0x12BE4F: Solver::run() (solver.cpp:52)
==153==    by 0x11591F: runAndVerifySolution(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, Heuristic*, bool, unsigned long) (rh_tests.cpp:63)
==153==    by 0x11A1FB: Solver_Basic_Test::TestBody() (rh_tests.cpp:658)
==153==    by 0x163A3F: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==153==    by 0x157C27: testing::Test::Run() (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==153==    by 0x157D7B: testing::TestInfo::Run() (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==153==    by 0x157E57: testing::TestSuite::Run() (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==153==    by 0x1583A3: testing::internal::UnitTestImpl::RunAllTests() (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==153==    by 0x163FD7: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==153==    by 0x1585EB: testing::UnitTest::Run() (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==153== 
==153== 2,304 bytes in 24 blocks are definitely lost in loss record 18 of 31
==153==    at 0x484A3C4: operator new(unsigned long) (in /usr/lib/aarch64-linux-gnu/valgrind/vgpreload_memcheck-arm64-linux.so)
==153==    by 0x134157: Move::Move(std::pair<char, int> const&, Board*, Move*) (move.cpp:19)
==153==    by 0x12BE4F: Solver::run() (solver.cpp:52)
==153==    by 0x11591F: runAndVerifySolution(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, Heuristic*, bool, unsigned long) (rh_tests.cpp:63)
==153==    by 0x11A40F: Solver_Basic_Test::TestBody() (rh_tests.cpp:683)
==153==    by 0x163A3F: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==153==    by 0x157C27: testing::Test::Run() (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==153==    by 0x157D7B: testing::TestInfo::Run() (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==153==    by 0x157E57: testing::TestSuite::Run() (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==153==    by 0x1583A3: testing::internal::UnitTestImpl::RunAllTests() (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==153==    by 0x163FD7: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==153==    by 0x1585EB: testing::UnitTest::Run() (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==153== 
==153== 2,592 bytes in 27 blocks are definitely lost in loss record 22 of 31
==153==    at 0x484A3C4: operator new(unsigned long) (in /usr/lib/aarch64-linux-gnu/valgrind/vgpreload_memcheck-arm64-linux.so)
==153==    by 0x134157: Move::Move(std::pair<char, int> const&, Board*, Move*) (move.cpp:19)
==153==    by 0x12BE4F: Solver::run() (solver.cpp:52)
==153==    by 0x11591F: runAndVerifySolution(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, Heuristic*, bool, unsigned long) (rh_tests.cpp:63)
==153==    by 0x11A0EF: Solver_Basic_Test::TestBody() (rh_tests.cpp:646)
==153==    by 0x163A3F: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==153==    by 0x157C27: testing::Test::Run() (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==153==    by 0x157D7B: testing::TestInfo::Run() (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==153==    by 0x157E57: testing::TestSuite::Run() (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==153==    by 0x1583A3: testing::internal::UnitTestImpl::RunAllTests() (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==153==    by 0x163FD7: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==153==    by 0x1585EB: testing::UnitTest::Run() (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==153== 
==153== 8,196 (448 direct, 7,748 indirect) bytes in 14 blocks are definitely lost in loss record 29 of 31
==153==    at 0x484A3C4: operator new(unsigned long) (in /usr/lib/aarch64-linux-gnu/valgrind/vgpreload_memcheck-arm64-linux.so)
==153==    by 0x12BE2F: Solver::run() (solver.cpp:52)
==153==    by 0x11591F: runAndVerifySolution(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, Heuristic*, bool, unsigned long) (rh_tests.cpp:63)
==153==    by 0x11A1FB: Solver_Basic_Test::TestBody() (rh_tests.cpp:658)
==153==    by 0x163A3F: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==153==    by 0x157C27: testing::Test::Run() (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==153==    by 0x157D7B: testing::TestInfo::Run() (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==153==    by 0x157E57: testing::TestSuite::Run() (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==153==    by 0x1583A3: testing::internal::UnitTestImpl::RunAllTests() (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==153==    by 0x163FD7: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==153==    by 0x1585EB: testing::UnitTest::Run() (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==153==    by 0x114F47: main (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==153== 
==153== 13,232 (672 direct, 12,560 indirect) bytes in 21 blocks are definitely lost in loss record 30 of 31
==153==    at 0x484A3C4: operator new(unsigned long) (in /usr/lib/aarch64-linux-gnu/valgrind/vgpreload_memcheck-arm64-linux.so)
==153==    by 0x12BE2F: Solver::run() (solver.cpp:52)
==153==    by 0x11591F: runAndVerifySolution(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, Heuristic*, bool, unsigned long) (rh_tests.cpp:63)
==153==    by 0x11A40F: Solver_Basic_Test::TestBody() (rh_tests.cpp:683)
==153==    by 0x163A3F: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==153==    by 0x157C27: testing::Test::Run() (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==153==    by 0x157D7B: testing::TestInfo::Run() (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==153==    by 0x157E57: testing::TestSuite::Run() (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==153==    by 0x1583A3: testing::internal::UnitTestImpl::RunAllTests() (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==153==    by 0x163FD7: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==153==    by 0x1585EB: testing::UnitTest::Run() (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==153==    by 0x114F47: main (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==153== 
==153== 13,820 (736 direct, 13,084 indirect) bytes in 23 blocks are definitely lost in loss record 31 of 31
==153==    at 0x484A3C4: operator new(unsigned long) (in /usr/lib/aarch64-linux-gnu/valgrind/vgpreload_memcheck-arm64-linux.so)
==153==    by 0x12BE2F: Solver::run() (solver.cpp:52)
==153==    by 0x11591F: runAndVerifySolution(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, Heuristic*, bool, unsigned long) (rh_tests.cpp:63)
==153==    by 0x11A0EF: Solver_Basic_Test::TestBody() (rh_tests.cpp:646)
==153==    by 0x163A3F: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==153==    by 0x157C27: testing::Test::Run() (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==153==    by 0x157D7B: testing::TestInfo::Run() (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==153==    by 0x157E57: testing::TestSuite::Run() (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==153==    by 0x1583A3: testing::internal::UnitTestImpl::RunAllTests() (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==153==    by 0x163FD7: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==153==    by 0x1585EB: testing::UnitTest::Run() (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==153==    by 0x114F47: main (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==153== 
==153== LEAK SUMMARY:
==153==    definitely lost: 8,992 bytes in 133 blocks
==153==    indirectly lost: 36,040 bytes in 909 blocks
==153==      possibly lost: 0 bytes in 0 blocks
==153==    still reachable: 0 bytes in 0 blocks
==153==         suppressed: 0 bytes in 0 blocks
==153== 
==153== For lists of detected and suppressed errors, rerun with: -s
==153== ERROR SUMMARY: 10 errors from 10 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.57 sec
----------------------------------------------------------
Test Passed.
"Solver.Basic" end time: Feb 24 01:55 UTC
"Solver.Basic" time elapsed: 00:00:00
----------------------------------------------------------

57/60 Testing: Solver.Difficult
57/60 Test: Solver.Difficult
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests" "--gtest_filter=Solver.Difficult"
Directory: /work/hw-echen606/hw3/hw3_stu_tests/rh_tests
"Solver.Difficult" start time: Feb 24 01:55 UTC
Output:
----------------------------------------------------------
==154== Memcheck, a memory error detector
==154== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==154== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==154== Command: /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests --gtest_filter=Solver.Difficult
==154== 
Running main() from /build/googletest-K1TalW/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = Solver.Difficult
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from Solver
[ RUN      ] Solver.Difficult
<end of output>
Test time =  60.05 sec
----------------------------------------------------------
Test Failed.
"Solver.Difficult" end time: Feb 24 01:56 UTC
"Solver.Difficult" time elapsed: 00:01:00
----------------------------------------------------------

58/60 Testing: Solver.InBoard10x10
58/60 Test: Solver.InBoard10x10
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests" "--gtest_filter=Solver.InBoard10x10"
Directory: /work/hw-echen606/hw3/hw3_stu_tests/rh_tests
"Solver.InBoard10x10" start time: Feb 24 01:56 UTC
Output:
----------------------------------------------------------
==155== Memcheck, a memory error detector
==155== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==155== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==155== Command: /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests --gtest_filter=Solver.InBoard10x10
==155== 
Running main() from /build/googletest-K1TalW/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = Solver.InBoard10x10
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from Solver
[ RUN      ] Solver.InBoard10x10
[       OK ] Solver.InBoard10x10 (51862 ms)
[----------] 1 test from Solver (51863 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (51871 ms total)
[  PASSED  ] 1 test.
==155== 
==155== HEAP SUMMARY:
==155==     in use at exit: 7,168,324 bytes in 152,299 blocks
==155==   total heap usage: 900,077 allocs, 747,778 frees, 230,726,918 bytes allocated
==155== 
==155== 64 bytes in 2 blocks are possibly lost in loss record 2 of 40
==155==    at 0x484A3C4: operator new(unsigned long) (in /usr/lib/aarch64-linux-gnu/valgrind/vgpreload_memcheck-arm64-linux.so)
==155==    by 0x12A79F: __gnu_cxx::new_allocator<std::pair<char, int> >::allocate(unsigned long, void const*) (new_allocator.h:114)
==155==    by 0x129E1B: std::allocator_traits<std::allocator<std::pair<char, int> > >::allocate(std::allocator<std::pair<char, int> >&, unsigned long) (alloc_traits.h:444)
==155==    by 0x128FBF: std::_Vector_base<std::pair<char, int>, std::allocator<std::pair<char, int> > >::_M_allocate(unsigned long) (stl_vector.h:343)
==155==    by 0x127D8B: void std::vector<std::pair<char, int>, std::allocator<std::pair<char, int> > >::_M_realloc_insert<std::pair<char, int> const&>(__gnu_cxx::__normal_iterator<std::pair<char, int>*, std::vector<std::pair<char, int>, std::allocator<std::pair<char, int> > > >, std::pair<char, int> const&) (vector.tcc:440)
==155==    by 0x1260FF: std::vector<std::pair<char, int>, std::allocator<std::pair<char, int> > >::push_back(std::pair<char, int> const&) (stl_vector.h:1195)
==155==    by 0x124467: Stack<std::pair<char, int> >::push(std::pair<char, int> const&) (Stack.h:49)
==155==    by 0x122B3F: Board::move(char, int) (board.cpp:236)
==155==    by 0x12BE27: Solver::run() (solver.cpp:50)
==155==    by 0x11591F: runAndVerifySolution(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, Heuristic*, bool, unsigned long) (rh_tests.cpp:63)
==155==    by 0x11A907: Solver_InBoard10x10_Test::TestBody() (rh_tests.cpp:720)
==155==    by 0x163A3F: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==155== 
==155== 112 bytes in 2 blocks are possibly lost in loss record 3 of 40
==155==    at 0x484A3C4: operator new(unsigned long) (in /usr/lib/aarch64-linux-gnu/valgrind/vgpreload_memcheck-arm64-linux.so)
==155==    by 0x12A583: __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<char const, Vehicle> > >::allocate(unsigned long, void const*) (new_allocator.h:114)
==155==    by 0x129C17: std::allocator_traits<std::allocator<std::_Rb_tree_node<std::pair<char const, Vehicle> > > >::allocate(std::allocator<std::_Rb_tree_node<std::pair<char const, Vehicle> > >&, unsigned long) (alloc_traits.h:444)
==155==    by 0x128B23: std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_get_node() (stl_tree.h:580)
==155==    by 0x12ADE7: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_create_node<std::pair<char const, Vehicle> const&>(std::pair<char const, Vehicle> const&) (stl_tree.h:630)
==155==    by 0x12A607: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node::operator()<std::pair<char const, Vehicle> const&>(std::pair<char const, Vehicle> const&) const (stl_tree.h:548)
==155==    by 0x129CA7: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_clone_node<std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node>(std::_Rb_tree_node<std::pair<char const, Vehicle> > const*, std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node&) (stl_tree.h:658)
==155==    by 0x128D53: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_copy<std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node>(std::_Rb_tree_node<std::pair<char const, Vehicle> > const*, std::_Rb_tree_node_base*, std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node&) (stl_tree.h:1875)
==155==    by 0x1274DB: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_copy<std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node>(std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > > const&, std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node&) (stl_tree.h:901)
==155==    by 0x125A63: std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_copy(std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > > const&) (stl_tree.h:912)
==155==    by 0x123ED3: std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Rb_tree(std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > > const&) (stl_tree.h:950)
==155==    by 0x12374F: std::map<char, Vehicle, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::map(std::map<char, Vehicle, std::less<char>, std::allocator<std::pair<char const, Vehicle> > > const&) (stl_map.h:205)
==155== 
==155== 112 bytes in 2 blocks are possibly lost in loss record 4 of 40
==155==    at 0x484A3C4: operator new(unsigned long) (in /usr/lib/aarch64-linux-gnu/valgrind/vgpreload_memcheck-arm64-linux.so)
==155==    by 0x12A583: __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<char const, Vehicle> > >::allocate(unsigned long, void const*) (new_allocator.h:114)
==155==    by 0x129C17: std::allocator_traits<std::allocator<std::_Rb_tree_node<std::pair<char const, Vehicle> > > >::allocate(std::allocator<std::_Rb_tree_node<std::pair<char const, Vehicle> > >&, unsigned long) (alloc_traits.h:444)
==155==    by 0x128B23: std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_get_node() (stl_tree.h:580)
==155==    by 0x12ADE7: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_create_node<std::pair<char const, Vehicle> const&>(std::pair<char const, Vehicle> const&) (stl_tree.h:630)
==155==    by 0x12A607: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node::operator()<std::pair<char const, Vehicle> const&>(std::pair<char const, Vehicle> const&) const (stl_tree.h:548)
==155==    by 0x129CA7: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_clone_node<std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node>(std::_Rb_tree_node<std::pair<char const, Vehicle> > const*, std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node&) (stl_tree.h:658)
==155==    by 0x128D53: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_copy<std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node>(std::_Rb_tree_node<std::pair<char const, Vehicle> > const*, std::_Rb_tree_node_base*, std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node&) (stl_tree.h:1875)
==155==    by 0x128D8F: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_copy<std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node>(std::_Rb_tree_node<std::pair<char const, Vehicle> > const*, std::_Rb_tree_node_base*, std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node&) (stl_tree.h:1881)
==155==    by 0x1274DB: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_copy<std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node>(std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > > const&, std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node&) (stl_tree.h:901)
==155==    by 0x125A63: std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_copy(std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > > const&) (stl_tree.h:912)
==155==    by 0x123ED3: std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Rb_tree(std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > > const&) (stl_tree.h:950)
==155== 
==155== 112 bytes in 2 blocks are possibly lost in loss record 5 of 40
==155==    at 0x484A3C4: operator new(unsigned long) (in /usr/lib/aarch64-linux-gnu/valgrind/vgpreload_memcheck-arm64-linux.so)
==155==    by 0x12A583: __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<char const, Vehicle> > >::allocate(unsigned long, void const*) (new_allocator.h:114)
==155==    by 0x129C17: std::allocator_traits<std::allocator<std::_Rb_tree_node<std::pair<char const, Vehicle> > > >::allocate(std::allocator<std::_Rb_tree_node<std::pair<char const, Vehicle> > >&, unsigned long) (alloc_traits.h:444)
==155==    by 0x128B23: std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_get_node() (stl_tree.h:580)
==155==    by 0x12ADE7: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_create_node<std::pair<char const, Vehicle> const&>(std::pair<char const, Vehicle> const&) (stl_tree.h:630)
==155==    by 0x12A607: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node::operator()<std::pair<char const, Vehicle> const&>(std::pair<char const, Vehicle> const&) const (stl_tree.h:548)
==155==    by 0x129CA7: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_clone_node<std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node>(std::_Rb_tree_node<std::pair<char const, Vehicle> > const*, std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node&) (stl_tree.h:658)
==155==    by 0x128D53: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_copy<std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node>(std::_Rb_tree_node<std::pair<char const, Vehicle> > const*, std::_Rb_tree_node_base*, std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node&) (stl_tree.h:1875)
==155==    by 0x128D8F: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_copy<std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node>(std::_Rb_tree_node<std::pair<char const, Vehicle> > const*, std::_Rb_tree_node_base*, std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node&) (stl_tree.h:1881)
==155==    by 0x128D8F: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_copy<std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node>(std::_Rb_tree_node<std::pair<char const, Vehicle> > const*, std::_Rb_tree_node_base*, std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node&) (stl_tree.h:1881)
==155==    by 0x1274DB: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_copy<std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node>(std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > > const&, std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node&) (stl_tree.h:901)
==155==    by 0x125A63: std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_copy(std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > > const&) (stl_tree.h:912)
==155== 
==155== 112 bytes in 2 blocks are possibly lost in loss record 6 of 40
==155==    at 0x484A3C4: operator new(unsigned long) (in /usr/lib/aarch64-linux-gnu/valgrind/vgpreload_memcheck-arm64-linux.so)
==155==    by 0x12A583: __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<char const, Vehicle> > >::allocate(unsigned long, void const*) (new_allocator.h:114)
==155==    by 0x129C17: std::allocator_traits<std::allocator<std::_Rb_tree_node<std::pair<char const, Vehicle> > > >::allocate(std::allocator<std::_Rb_tree_node<std::pair<char const, Vehicle> > >&, unsigned long) (alloc_traits.h:444)
==155==    by 0x128B23: std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_get_node() (stl_tree.h:580)
==155==    by 0x12ADE7: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_create_node<std::pair<char const, Vehicle> const&>(std::pair<char const, Vehicle> const&) (stl_tree.h:630)
==155==    by 0x12A607: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node::operator()<std::pair<char const, Vehicle> const&>(std::pair<char const, Vehicle> const&) const (stl_tree.h:548)
==155==    by 0x129CA7: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_clone_node<std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node>(std::_Rb_tree_node<std::pair<char const, Vehicle> > const*, std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node&) (stl_tree.h:658)
==155==    by 0x128D53: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_copy<std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node>(std::_Rb_tree_node<std::pair<char const, Vehicle> > const*, std::_Rb_tree_node_base*, std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node&) (stl_tree.h:1875)
==155==    by 0x128D8F: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_copy<std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node>(std::_Rb_tree_node<std::pair<char const, Vehicle> > const*, std::_Rb_tree_node_base*, std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node&) (stl_tree.h:1881)
==155==    by 0x128D8F: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_copy<std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node>(std::_Rb_tree_node<std::pair<char const, Vehicle> > const*, std::_Rb_tree_node_base*, std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node&) (stl_tree.h:1881)
==155==    by 0x128D8F: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_copy<std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node>(std::_Rb_tree_node<std::pair<char const, Vehicle> > const*, std::_Rb_tree_node_base*, std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node&) (stl_tree.h:1881)
==155==    by 0x1274DB: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_copy<std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node>(std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > > const&, std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node&) (stl_tree.h:901)
==155== 
==155== 112 bytes in 2 blocks are possibly lost in loss record 7 of 40
==155==    at 0x484A3C4: operator new(unsigned long) (in /usr/lib/aarch64-linux-gnu/valgrind/vgpreload_memcheck-arm64-linux.so)
==155==    by 0x12A583: __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<char const, Vehicle> > >::allocate(unsigned long, void const*) (new_allocator.h:114)
==155==    by 0x129C17: std::allocator_traits<std::allocator<std::_Rb_tree_node<std::pair<char const, Vehicle> > > >::allocate(std::allocator<std::_Rb_tree_node<std::pair<char const, Vehicle> > >&, unsigned long) (alloc_traits.h:444)
==155==    by 0x128B23: std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_get_node() (stl_tree.h:580)
==155==    by 0x12ADE7: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_create_node<std::pair<char const, Vehicle> const&>(std::pair<char const, Vehicle> const&) (stl_tree.h:630)
==155==    by 0x12A607: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node::operator()<std::pair<char const, Vehicle> const&>(std::pair<char const, Vehicle> const&) const (stl_tree.h:548)
==155==    by 0x129CA7: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_clone_node<std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node>(std::_Rb_tree_node<std::pair<char const, Vehicle> > const*, std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node&) (stl_tree.h:658)
==155==    by 0x128DCB: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_copy<std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node>(std::_Rb_tree_node<std::pair<char const, Vehicle> > const*, std::_Rb_tree_node_base*, std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node&) (stl_tree.h:1887)
==155==    by 0x128D8F: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_copy<std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node>(std::_Rb_tree_node<std::pair<char const, Vehicle> > const*, std::_Rb_tree_node_base*, std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node&) (stl_tree.h:1881)
==155==    by 0x128D8F: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_copy<std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node>(std::_Rb_tree_node<std::pair<char const, Vehicle> > const*, std::_Rb_tree_node_base*, std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node&) (stl_tree.h:1881)
==155==    by 0x1274DB: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_copy<std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node>(std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > > const&, std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node&) (stl_tree.h:901)
==155==    by 0x125A63: std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_copy(std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > > const&) (stl_tree.h:912)
==155== 
==155== 112 bytes in 2 blocks are possibly lost in loss record 8 of 40
==155==    at 0x484A3C4: operator new(unsigned long) (in /usr/lib/aarch64-linux-gnu/valgrind/vgpreload_memcheck-arm64-linux.so)
==155==    by 0x12A583: __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<char const, Vehicle> > >::allocate(unsigned long, void const*) (new_allocator.h:114)
==155==    by 0x129C17: std::allocator_traits<std::allocator<std::_Rb_tree_node<std::pair<char const, Vehicle> > > >::allocate(std::allocator<std::_Rb_tree_node<std::pair<char const, Vehicle> > >&, unsigned long) (alloc_traits.h:444)
==155==    by 0x128B23: std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_get_node() (stl_tree.h:580)
==155==    by 0x12ADE7: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_create_node<std::pair<char const, Vehicle> const&>(std::pair<char const, Vehicle> const&) (stl_tree.h:630)
==155==    by 0x12A607: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node::operator()<std::pair<char const, Vehicle> const&>(std::pair<char const, Vehicle> const&) const (stl_tree.h:548)
==155==    by 0x129CA7: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_clone_node<std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node>(std::_Rb_tree_node<std::pair<char const, Vehicle> > const*, std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node&) (stl_tree.h:658)
==155==    by 0x128DCB: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_copy<std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node>(std::_Rb_tree_node<std::pair<char const, Vehicle> > const*, std::_Rb_tree_node_base*, std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node&) (stl_tree.h:1887)
==155==    by 0x128D8F: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_copy<std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node>(std::_Rb_tree_node<std::pair<char const, Vehicle> > const*, std::_Rb_tree_node_base*, std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node&) (stl_tree.h:1881)
==155==    by 0x1274DB: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_copy<std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node>(std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > > const&, std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node&) (stl_tree.h:901)
==155==    by 0x125A63: std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_copy(std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > > const&) (stl_tree.h:912)
==155==    by 0x123ED3: std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Rb_tree(std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > > const&) (stl_tree.h:950)
==155== 
==155== 112 bytes in 2 blocks are possibly lost in loss record 9 of 40
==155==    at 0x484A3C4: operator new(unsigned long) (in /usr/lib/aarch64-linux-gnu/valgrind/vgpreload_memcheck-arm64-linux.so)
==155==    by 0x12A583: __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<char const, Vehicle> > >::allocate(unsigned long, void const*) (new_allocator.h:114)
==155==    by 0x129C17: std::allocator_traits<std::allocator<std::_Rb_tree_node<std::pair<char const, Vehicle> > > >::allocate(std::allocator<std::_Rb_tree_node<std::pair<char const, Vehicle> > >&, unsigned long) (alloc_traits.h:444)
==155==    by 0x128B23: std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_get_node() (stl_tree.h:580)
==155==    by 0x12ADE7: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_create_node<std::pair<char const, Vehicle> const&>(std::pair<char const, Vehicle> const&) (stl_tree.h:630)
==155==    by 0x12A607: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node::operator()<std::pair<char const, Vehicle> const&>(std::pair<char const, Vehicle> const&) const (stl_tree.h:548)
==155==    by 0x129CA7: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_clone_node<std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node>(std::_Rb_tree_node<std::pair<char const, Vehicle> > const*, std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node&) (stl_tree.h:658)
==155==    by 0x128D53: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_copy<std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node>(std::_Rb_tree_node<std::pair<char const, Vehicle> > const*, std::_Rb_tree_node_base*, std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node&) (stl_tree.h:1875)
==155==    by 0x128E13: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_copy<std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node>(std::_Rb_tree_node<std::pair<char const, Vehicle> > const*, std::_Rb_tree_node_base*, std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node&) (stl_tree.h:1891)
==155==    by 0x128D8F: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_copy<std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node>(std::_Rb_tree_node<std::pair<char const, Vehicle> > const*, std::_Rb_tree_node_base*, std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node&) (stl_tree.h:1881)
==155==    by 0x1274DB: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_copy<std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node>(std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > > const&, std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node&) (stl_tree.h:901)
==155==    by 0x125A63: std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_copy(std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > > const&) (stl_tree.h:912)
==155== 
==155== 112 bytes in 2 blocks are possibly lost in loss record 10 of 40
==155==    at 0x484A3C4: operator new(unsigned long) (in /usr/lib/aarch64-linux-gnu/valgrind/vgpreload_memcheck-arm64-linux.so)
==155==    by 0x12A583: __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<char const, Vehicle> > >::allocate(unsigned long, void const*) (new_allocator.h:114)
==155==    by 0x129C17: std::allocator_traits<std::allocator<std::_Rb_tree_node<std::pair<char const, Vehicle> > > >::allocate(std::allocator<std::_Rb_tree_node<std::pair<char const, Vehicle> > >&, unsigned long) (alloc_traits.h:444)
==155==    by 0x128B23: std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_get_node() (stl_tree.h:580)
==155==    by 0x12ADE7: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_create_node<std::pair<char const, Vehicle> const&>(std::pair<char const, Vehicle> const&) (stl_tree.h:630)
==155==    by 0x12A607: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node::operator()<std::pair<char const, Vehicle> const&>(std::pair<char const, Vehicle> const&) const (stl_tree.h:548)
==155==    by 0x129CA7: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_clone_node<std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node>(std::_Rb_tree_node<std::pair<char const, Vehicle> > const*, std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node&) (stl_tree.h:658)
==155==    by 0x128D53: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_copy<std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node>(std::_Rb_tree_node<std::pair<char const, Vehicle> > const*, std::_Rb_tree_node_base*, std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node&) (stl_tree.h:1875)
==155==    by 0x128E13: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_copy<std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node>(std::_Rb_tree_node<std::pair<char const, Vehicle> > const*, std::_Rb_tree_node_base*, std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node&) (stl_tree.h:1891)
==155==    by 0x1274DB: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_copy<std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node>(std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > > const&, std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node&) (stl_tree.h:901)
==155==    by 0x125A63: std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_copy(std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > > const&) (stl_tree.h:912)
==155==    by 0x123ED3: std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Rb_tree(std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > > const&) (stl_tree.h:950)
==155== 
==155== 192 bytes in 2 blocks are possibly lost in loss record 11 of 40
==155==    at 0x484A3C4: operator new(unsigned long) (in /usr/lib/aarch64-linux-gnu/valgrind/vgpreload_memcheck-arm64-linux.so)
==155==    by 0x12BDF7: Solver::run() (solver.cpp:49)
==155==    by 0x11591F: runAndVerifySolution(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, Heuristic*, bool, unsigned long) (rh_tests.cpp:63)
==155==    by 0x11A907: Solver_InBoard10x10_Test::TestBody() (rh_tests.cpp:720)
==155==    by 0x163A3F: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==155==    by 0x157C27: testing::Test::Run() (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==155==    by 0x157D7B: testing::TestInfo::Run() (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==155==    by 0x157E57: testing::TestSuite::Run() (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==155==    by 0x1583A3: testing::internal::UnitTestImpl::RunAllTests() (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==155==    by 0x163FD7: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==155==    by 0x1585EB: testing::UnitTest::Run() (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==155==    by 0x114F47: main (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==155== 
==155== 200 bytes in 20 blocks are possibly lost in loss record 12 of 40
==155==    at 0x484A3C4: operator new(unsigned long) (in /usr/lib/aarch64-linux-gnu/valgrind/vgpreload_memcheck-arm64-linux.so)
==155==    by 0x129B23: __gnu_cxx::new_allocator<char>::allocate(unsigned long, void const*) (new_allocator.h:114)
==155==    by 0x128A0F: std::allocator_traits<std::allocator<char> >::allocate(std::allocator<char>&, unsigned long) (alloc_traits.h:444)
==155==    by 0x126DBF: std::_Vector_base<char, std::allocator<char> >::_M_allocate(unsigned long) (stl_vector.h:343)
==155==    by 0x12B4EB: std::_Vector_base<char, std::allocator<char> >::_M_create_storage(unsigned long) (stl_vector.h:358)
==155==    by 0x12AE3F: std::_Vector_base<char, std::allocator<char> >::_Vector_base(unsigned long, std::allocator<char> const&) (stl_vector.h:302)
==155==    by 0x12A6A7: std::vector<char, std::allocator<char> >::vector(std::vector<char, std::allocator<char> > const&) (stl_vector.h:552)
==155==    by 0x129DCF: void std::_Construct<std::vector<char, std::allocator<char> >, std::vector<char, std::allocator<char> > const&>(std::vector<char, std::allocator<char> >*, std::vector<char, std::allocator<char> > const&) (stl_construct.h:75)
==155==    by 0x128F47: std::vector<char, std::allocator<char> >* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<std::vector<char, std::allocator<char> > const*, std::vector<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > > >, std::vector<char, std::allocator<char> >*>(__gnu_cxx::__normal_iterator<std::vector<char, std::allocator<char> > const*, std::vector<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > > >, __gnu_cxx::__normal_iterator<std::vector<char, std::allocator<char> > const*, std::vector<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > > >, std::vector<char, std::allocator<char> >*) (stl_uninitialized.h:83)
==155==    by 0x127677: std::vector<char, std::allocator<char> >* std::uninitialized_copy<__gnu_cxx::__normal_iterator<std::vector<char, std::allocator<char> > const*, std::vector<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > > >, std::vector<char, std::allocator<char> >*>(__gnu_cxx::__normal_iterator<std::vector<char, std::allocator<char> > const*, std::vector<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > > >, __gnu_cxx::__normal_iterator<std::vector<char, std::allocator<char> > const*, std::vector<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > > >, std::vector<char, std::allocator<char> >*) (stl_uninitialized.h:140)
==155==    by 0x125C5F: std::vector<char, std::allocator<char> >* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<std::vector<char, std::allocator<char> > const*, std::vector<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > > >, std::vector<char, std::allocator<char> >*, std::vector<char, std::allocator<char> > >(__gnu_cxx::__normal_iterator<std::vector<char, std::allocator<char> > const*, std::vector<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > > >, __gnu_cxx::__normal_iterator<std::vector<char, std::allocator<char> > const*, std::vector<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > > >, std::vector<char, std::allocator<char> >*, std::allocator<std::vector<char, std::allocator<char> > >&) (stl_uninitialized.h:307)
==155==    by 0x123FAF: std::vector<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::vector(std::vector<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > > const&) (stl_vector.h:555)
==155== 
==155== 336 bytes in 6 blocks are possibly lost in loss record 13 of 40
==155==    at 0x484A3C4: operator new(unsigned long) (in /usr/lib/aarch64-linux-gnu/valgrind/vgpreload_memcheck-arm64-linux.so)
==155==    by 0x12A583: __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<char const, Vehicle> > >::allocate(unsigned long, void const*) (new_allocator.h:114)
==155==    by 0x129C17: std::allocator_traits<std::allocator<std::_Rb_tree_node<std::pair<char const, Vehicle> > > >::allocate(std::allocator<std::_Rb_tree_node<std::pair<char const, Vehicle> > >&, unsigned long) (alloc_traits.h:444)
==155==    by 0x128B23: std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_get_node() (stl_tree.h:580)
==155==    by 0x12ADE7: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_create_node<std::pair<char const, Vehicle> const&>(std::pair<char const, Vehicle> const&) (stl_tree.h:630)
==155==    by 0x12A607: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node::operator()<std::pair<char const, Vehicle> const&>(std::pair<char const, Vehicle> const&) const (stl_tree.h:548)
==155==    by 0x129CA7: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_clone_node<std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node>(std::_Rb_tree_node<std::pair<char const, Vehicle> > const*, std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node&) (stl_tree.h:658)
==155==    by 0x128DCB: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_copy<std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node>(std::_Rb_tree_node<std::pair<char const, Vehicle> > const*, std::_Rb_tree_node_base*, std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node&) (stl_tree.h:1887)
==155==    by 0x1274DB: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_copy<std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node>(std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > > const&, std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node&) (stl_tree.h:901)
==155==    by 0x125A63: std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_copy(std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > > const&) (stl_tree.h:912)
==155==    by 0x123ED3: std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Rb_tree(std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > > const&) (stl_tree.h:950)
==155==    by 0x12374F: std::map<char, Vehicle, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::map(std::map<char, Vehicle, std::less<char>, std::allocator<std::pair<char const, Vehicle> > > const&) (stl_map.h:205)
==155== 
==155== 480 bytes in 2 blocks are possibly lost in loss record 14 of 40
==155==    at 0x484A3C4: operator new(unsigned long) (in /usr/lib/aarch64-linux-gnu/valgrind/vgpreload_memcheck-arm64-linux.so)
==155==    by 0x1299B7: __gnu_cxx::new_allocator<std::vector<char, std::allocator<char> > >::allocate(unsigned long, void const*) (new_allocator.h:114)
==155==    by 0x12886B: std::allocator_traits<std::allocator<std::vector<char, std::allocator<char> > > >::allocate(std::allocator<std::vector<char, std::allocator<char> > >&, unsigned long) (alloc_traits.h:444)
==155==    by 0x126B63: std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_M_allocate(unsigned long) (stl_vector.h:343)
==155==    by 0x1275D3: std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_M_create_storage(unsigned long) (stl_vector.h:358)
==155==    by 0x125B3B: std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_base(unsigned long, std::allocator<std::vector<char, std::allocator<char> > > const&) (stl_vector.h:302)
==155==    by 0x123F6B: std::vector<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::vector(std::vector<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > > const&) (stl_vector.h:552)
==155==    by 0x122433: Board::Board(Board const&) (board.cpp:98)
==155==    by 0x12BE0F: Solver::run() (solver.cpp:49)
==155==    by 0x11591F: runAndVerifySolution(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, Heuristic*, bool, unsigned long) (rh_tests.cpp:63)
==155==    by 0x11A907: Solver_InBoard10x10_Test::TestBody() (rh_tests.cpp:720)
==155==    by 0x163A3F: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==155== 
==155== 77,748 (3,976 direct, 73,772 indirect) bytes in 71 blocks are definitely lost in loss record 16 of 40
==155==    at 0x484A3C4: operator new(unsigned long) (in /usr/lib/aarch64-linux-gnu/valgrind/vgpreload_memcheck-arm64-linux.so)
==155==    by 0x12A583: __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<char const, Vehicle> > >::allocate(unsigned long, void const*) (new_allocator.h:114)
==155==    by 0x129C17: std::allocator_traits<std::allocator<std::_Rb_tree_node<std::pair<char const, Vehicle> > > >::allocate(std::allocator<std::_Rb_tree_node<std::pair<char const, Vehicle> > >&, unsigned long) (alloc_traits.h:444)
==155==    by 0x128B23: std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_get_node() (stl_tree.h:580)
==155==    by 0x12ADE7: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_create_node<std::pair<char const, Vehicle> const&>(std::pair<char const, Vehicle> const&) (stl_tree.h:630)
==155==    by 0x12A607: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node::operator()<std::pair<char const, Vehicle> const&>(std::pair<char const, Vehicle> const&) const (stl_tree.h:548)
==155==    by 0x129CA7: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_clone_node<std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node>(std::_Rb_tree_node<std::pair<char const, Vehicle> > const*, std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node&) (stl_tree.h:658)
==155==    by 0x128D53: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_copy<std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node>(std::_Rb_tree_node<std::pair<char const, Vehicle> > const*, std::_Rb_tree_node_base*, std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node&) (stl_tree.h:1875)
==155==    by 0x128E13: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_copy<std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node>(std::_Rb_tree_node<std::pair<char const, Vehicle> > const*, std::_Rb_tree_node_base*, std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node&) (stl_tree.h:1891)
==155==    by 0x1274DB: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_copy<std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node>(std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > > const&, std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node&) (stl_tree.h:901)
==155==    by 0x125A63: std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_copy(std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > > const&) (stl_tree.h:912)
==155==    by 0x123ED3: std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Rb_tree(std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > > const&) (stl_tree.h:950)
==155== 
==155== 124,712 (10,944 direct, 113,768 indirect) bytes in 114 blocks are definitely lost in loss record 17 of 40
==155==    at 0x484A3C4: operator new(unsigned long) (in /usr/lib/aarch64-linux-gnu/valgrind/vgpreload_memcheck-arm64-linux.so)
==155==    by 0x12BDF7: Solver::run() (solver.cpp:49)
==155==    by 0x11591F: runAndVerifySolution(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, Heuristic*, bool, unsigned long) (rh_tests.cpp:63)
==155==    by 0x11A907: Solver_InBoard10x10_Test::TestBody() (rh_tests.cpp:720)
==155==    by 0x163A3F: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==155==    by 0x157C27: testing::Test::Run() (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==155==    by 0x157D7B: testing::TestInfo::Run() (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==155==    by 0x157E57: testing::TestSuite::Run() (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==155==    by 0x1583A3: testing::internal::UnitTestImpl::RunAllTests() (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==155==    by 0x163FD7: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==155==    by 0x1585EB: testing::UnitTest::Run() (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==155==    by 0x114F47: main (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==155== 
==155== 143,652 (7,336 direct, 136,316 indirect) bytes in 131 blocks are definitely lost in loss record 18 of 40
==155==    at 0x484A3C4: operator new(unsigned long) (in /usr/lib/aarch64-linux-gnu/valgrind/vgpreload_memcheck-arm64-linux.so)
==155==    by 0x12A583: __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<char const, Vehicle> > >::allocate(unsigned long, void const*) (new_allocator.h:114)
==155==    by 0x129C17: std::allocator_traits<std::allocator<std::_Rb_tree_node<std::pair<char const, Vehicle> > > >::allocate(std::allocator<std::_Rb_tree_node<std::pair<char const, Vehicle> > >&, unsigned long) (alloc_traits.h:444)
==155==    by 0x128B23: std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_get_node() (stl_tree.h:580)
==155==    by 0x12ADE7: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_create_node<std::pair<char const, Vehicle> const&>(std::pair<char const, Vehicle> const&) (stl_tree.h:630)
==155==    by 0x12A607: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node::operator()<std::pair<char const, Vehicle> const&>(std::pair<char const, Vehicle> const&) const (stl_tree.h:548)
==155==    by 0x129CA7: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_clone_node<std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node>(std::_Rb_tree_node<std::pair<char const, Vehicle> > const*, std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node&) (stl_tree.h:658)
==155==    by 0x128DCB: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_copy<std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node>(std::_Rb_tree_node<std::pair<char const, Vehicle> > const*, std::_Rb_tree_node_base*, std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node&) (stl_tree.h:1887)
==155==    by 0x128D8F: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_copy<std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node>(std::_Rb_tree_node<std::pair<char const, Vehicle> > const*, std::_Rb_tree_node_base*, std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node&) (stl_tree.h:1881)
==155==    by 0x128D8F: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_copy<std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node>(std::_Rb_tree_node<std::pair<char const, Vehicle> > const*, std::_Rb_tree_node_base*, std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node&) (stl_tree.h:1881)
==155==    by 0x1274DB: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_copy<std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node>(std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > > const&, std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node&) (stl_tree.h:901)
==155==    by 0x125A63: std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_copy(std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > > const&) (stl_tree.h:912)
==155== 
==155== 227,856 (11,648 direct, 216,208 indirect) bytes in 208 blocks are definitely lost in loss record 19 of 40
==155==    at 0x484A3C4: operator new(unsigned long) (in /usr/lib/aarch64-linux-gnu/valgrind/vgpreload_memcheck-arm64-linux.so)
==155==    by 0x12A583: __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<char const, Vehicle> > >::allocate(unsigned long, void const*) (new_allocator.h:114)
==155==    by 0x129C17: std::allocator_traits<std::allocator<std::_Rb_tree_node<std::pair<char const, Vehicle> > > >::allocate(std::allocator<std::_Rb_tree_node<std::pair<char const, Vehicle> > >&, unsigned long) (alloc_traits.h:444)
==155==    by 0x128B23: std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_get_node() (stl_tree.h:580)
==155==    by 0x12ADE7: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_create_node<std::pair<char const, Vehicle> const&>(std::pair<char const, Vehicle> const&) (stl_tree.h:630)
==155==    by 0x12A607: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node::operator()<std::pair<char const, Vehicle> const&>(std::pair<char const, Vehicle> const&) const (stl_tree.h:548)
==155==    by 0x129CA7: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_clone_node<std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node>(std::_Rb_tree_node<std::pair<char const, Vehicle> > const*, std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node&) (stl_tree.h:658)
==155==    by 0x128D53: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_copy<std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node>(std::_Rb_tree_node<std::pair<char const, Vehicle> > const*, std::_Rb_tree_node_base*, std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node&) (stl_tree.h:1875)
==155==    by 0x128D8F: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_copy<std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node>(std::_Rb_tree_node<std::pair<char const, Vehicle> > const*, std::_Rb_tree_node_base*, std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node&) (stl_tree.h:1881)
==155==    by 0x128D8F: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_copy<std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node>(std::_Rb_tree_node<std::pair<char const, Vehicle> > const*, std::_Rb_tree_node_base*, std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node&) (stl_tree.h:1881)
==155==    by 0x128D8F: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_copy<std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node>(std::_Rb_tree_node<std::pair<char const, Vehicle> > const*, std::_Rb_tree_node_base*, std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node&) (stl_tree.h:1881)
==155==    by 0x1274DB: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_copy<std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node>(std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > > const&, std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node&) (stl_tree.h:901)
==155== 
==155== 295,352 (15,120 direct, 280,232 indirect) bytes in 270 blocks are definitely lost in loss record 23 of 40
==155==    at 0x484A3C4: operator new(unsigned long) (in /usr/lib/aarch64-linux-gnu/valgrind/vgpreload_memcheck-arm64-linux.so)
==155==    by 0x12A583: __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<char const, Vehicle> > >::allocate(unsigned long, void const*) (new_allocator.h:114)
==155==    by 0x129C17: std::allocator_traits<std::allocator<std::_Rb_tree_node<std::pair<char const, Vehicle> > > >::allocate(std::allocator<std::_Rb_tree_node<std::pair<char const, Vehicle> > >&, unsigned long) (alloc_traits.h:444)
==155==    by 0x128B23: std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_get_node() (stl_tree.h:580)
==155==    by 0x12ADE7: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_create_node<std::pair<char const, Vehicle> const&>(std::pair<char const, Vehicle> const&) (stl_tree.h:630)
==155==    by 0x12A607: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node::operator()<std::pair<char const, Vehicle> const&>(std::pair<char const, Vehicle> const&) const (stl_tree.h:548)
==155==    by 0x129CA7: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_clone_node<std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node>(std::_Rb_tree_node<std::pair<char const, Vehicle> > const*, std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node&) (stl_tree.h:658)
==155==    by 0x128DCB: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_copy<std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node>(std::_Rb_tree_node<std::pair<char const, Vehicle> > const*, std::_Rb_tree_node_base*, std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node&) (stl_tree.h:1887)
==155==    by 0x128D8F: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_copy<std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node>(std::_Rb_tree_node<std::pair<char const, Vehicle> > const*, std::_Rb_tree_node_base*, std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node&) (stl_tree.h:1881)
==155==    by 0x1274DB: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_copy<std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node>(std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > > const&, std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node&) (stl_tree.h:901)
==155==    by 0x125A63: std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_copy(std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > > const&) (stl_tree.h:912)
==155==    by 0x123ED3: std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Rb_tree(std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > > const&) (stl_tree.h:950)
==155== 
==155== 332,608 (17,024 direct, 315,584 indirect) bytes in 304 blocks are definitely lost in loss record 30 of 40
==155==    at 0x484A3C4: operator new(unsigned long) (in /usr/lib/aarch64-linux-gnu/valgrind/vgpreload_memcheck-arm64-linux.so)
==155==    by 0x12A583: __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<char const, Vehicle> > >::allocate(unsigned long, void const*) (new_allocator.h:114)
==155==    by 0x129C17: std::allocator_traits<std::allocator<std::_Rb_tree_node<std::pair<char const, Vehicle> > > >::allocate(std::allocator<std::_Rb_tree_node<std::pair<char const, Vehicle> > >&, unsigned long) (alloc_traits.h:444)
==155==    by 0x128B23: std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_get_node() (stl_tree.h:580)
==155==    by 0x12ADE7: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_create_node<std::pair<char const, Vehicle> const&>(std::pair<char const, Vehicle> const&) (stl_tree.h:630)
==155==    by 0x12A607: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node::operator()<std::pair<char const, Vehicle> const&>(std::pair<char const, Vehicle> const&) const (stl_tree.h:548)
==155==    by 0x129CA7: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_clone_node<std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node>(std::_Rb_tree_node<std::pair<char const, Vehicle> > const*, std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node&) (stl_tree.h:658)
==155==    by 0x128DCB: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_copy<std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node>(std::_Rb_tree_node<std::pair<char const, Vehicle> > const*, std::_Rb_tree_node_base*, std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node&) (stl_tree.h:1887)
==155==    by 0x1274DB: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_copy<std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node>(std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > > const&, std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node&) (stl_tree.h:901)
==155==    by 0x125A63: std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_copy(std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > > const&) (stl_tree.h:912)
==155==    by 0x123ED3: std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Rb_tree(std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > > const&) (stl_tree.h:950)
==155==    by 0x12374F: std::map<char, Vehicle, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::map(std::map<char, Vehicle, std::less<char>, std::allocator<std::pair<char const, Vehicle> > > const&) (stl_map.h:205)
==155== 
==155== 367,108 (18,760 direct, 348,348 indirect) bytes in 335 blocks are definitely lost in loss record 31 of 40
==155==    at 0x484A3C4: operator new(unsigned long) (in /usr/lib/aarch64-linux-gnu/valgrind/vgpreload_memcheck-arm64-linux.so)
==155==    by 0x12A583: __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<char const, Vehicle> > >::allocate(unsigned long, void const*) (new_allocator.h:114)
==155==    by 0x129C17: std::allocator_traits<std::allocator<std::_Rb_tree_node<std::pair<char const, Vehicle> > > >::allocate(std::allocator<std::_Rb_tree_node<std::pair<char const, Vehicle> > >&, unsigned long) (alloc_traits.h:444)
==155==    by 0x128B23: std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_get_node() (stl_tree.h:580)
==155==    by 0x12ADE7: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_create_node<std::pair<char const, Vehicle> const&>(std::pair<char const, Vehicle> const&) (stl_tree.h:630)
==155==    by 0x12A607: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node::operator()<std::pair<char const, Vehicle> const&>(std::pair<char const, Vehicle> const&) const (stl_tree.h:548)
==155==    by 0x129CA7: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_clone_node<std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node>(std::_Rb_tree_node<std::pair<char const, Vehicle> > const*, std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node&) (stl_tree.h:658)
==155==    by 0x128D53: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_copy<std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node>(std::_Rb_tree_node<std::pair<char const, Vehicle> > const*, std::_Rb_tree_node_base*, std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node&) (stl_tree.h:1875)
==155==    by 0x128E13: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_copy<std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node>(std::_Rb_tree_node<std::pair<char const, Vehicle> > const*, std::_Rb_tree_node_base*, std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node&) (stl_tree.h:1891)
==155==    by 0x128D8F: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_copy<std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node>(std::_Rb_tree_node<std::pair<char const, Vehicle> > const*, std::_Rb_tree_node_base*, std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node&) (stl_tree.h:1881)
==155==    by 0x1274DB: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_copy<std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node>(std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > > const&, std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node&) (stl_tree.h:901)
==155==    by 0x125A63: std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_copy(std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > > const&) (stl_tree.h:912)
==155== 
==155== 480,260 (24,584 direct, 455,676 indirect) bytes in 439 blocks are definitely lost in loss record 32 of 40
==155==    at 0x484A3C4: operator new(unsigned long) (in /usr/lib/aarch64-linux-gnu/valgrind/vgpreload_memcheck-arm64-linux.so)
==155==    by 0x12A583: __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<char const, Vehicle> > >::allocate(unsigned long, void const*) (new_allocator.h:114)
==155==    by 0x129C17: std::allocator_traits<std::allocator<std::_Rb_tree_node<std::pair<char const, Vehicle> > > >::allocate(std::allocator<std::_Rb_tree_node<std::pair<char const, Vehicle> > >&, unsigned long) (alloc_traits.h:444)
==155==    by 0x128B23: std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_get_node() (stl_tree.h:580)
==155==    by 0x12ADE7: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_create_node<std::pair<char const, Vehicle> const&>(std::pair<char const, Vehicle> const&) (stl_tree.h:630)
==155==    by 0x12A607: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node::operator()<std::pair<char const, Vehicle> const&>(std::pair<char const, Vehicle> const&) const (stl_tree.h:548)
==155==    by 0x129CA7: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_clone_node<std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node>(std::_Rb_tree_node<std::pair<char const, Vehicle> > const*, std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node&) (stl_tree.h:658)
==155==    by 0x128D53: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_copy<std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node>(std::_Rb_tree_node<std::pair<char const, Vehicle> > const*, std::_Rb_tree_node_base*, std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node&) (stl_tree.h:1875)
==155==    by 0x128D8F: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_copy<std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node>(std::_Rb_tree_node<std::pair<char const, Vehicle> > const*, std::_Rb_tree_node_base*, std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node&) (stl_tree.h:1881)
==155==    by 0x128D8F: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_copy<std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node>(std::_Rb_tree_node<std::pair<char const, Vehicle> > const*, std::_Rb_tree_node_base*, std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node&) (stl_tree.h:1881)
==155==    by 0x1274DB: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_copy<std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node>(std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > > const&, std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node&) (stl_tree.h:901)
==155==    by 0x125A63: std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_copy(std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > > const&) (stl_tree.h:912)
==155== 
==155== 563,424 bytes in 5,869 blocks are definitely lost in loss record 34 of 40
==155==    at 0x484A3C4: operator new(unsigned long) (in /usr/lib/aarch64-linux-gnu/valgrind/vgpreload_memcheck-arm64-linux.so)
==155==    by 0x134157: Move::Move(std::pair<char, int> const&, Board*, Move*) (move.cpp:19)
==155==    by 0x12BE4F: Solver::run() (solver.cpp:52)
==155==    by 0x11591F: runAndVerifySolution(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, Heuristic*, bool, unsigned long) (rh_tests.cpp:63)
==155==    by 0x11A907: Solver_InBoard10x10_Test::TestBody() (rh_tests.cpp:720)
==155==    by 0x163A3F: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==155==    by 0x157C27: testing::Test::Run() (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==155==    by 0x157D7B: testing::TestInfo::Run() (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==155==    by 0x157E57: testing::TestSuite::Run() (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==155==    by 0x1583A3: testing::internal::UnitTestImpl::RunAllTests() (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==155==    by 0x163FD7: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==155==    by 0x1585EB: testing::UnitTest::Run() (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==155== 
==155== 936,560 (47,936 direct, 888,624 indirect) bytes in 856 blocks are definitely lost in loss record 36 of 40
==155==    at 0x484A3C4: operator new(unsigned long) (in /usr/lib/aarch64-linux-gnu/valgrind/vgpreload_memcheck-arm64-linux.so)
==155==    by 0x12A583: __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<char const, Vehicle> > >::allocate(unsigned long, void const*) (new_allocator.h:114)
==155==    by 0x129C17: std::allocator_traits<std::allocator<std::_Rb_tree_node<std::pair<char const, Vehicle> > > >::allocate(std::allocator<std::_Rb_tree_node<std::pair<char const, Vehicle> > >&, unsigned long) (alloc_traits.h:444)
==155==    by 0x128B23: std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_get_node() (stl_tree.h:580)
==155==    by 0x12ADE7: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_create_node<std::pair<char const, Vehicle> const&>(std::pair<char const, Vehicle> const&) (stl_tree.h:630)
==155==    by 0x12A607: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node::operator()<std::pair<char const, Vehicle> const&>(std::pair<char const, Vehicle> const&) const (stl_tree.h:548)
==155==    by 0x129CA7: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_clone_node<std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node>(std::_Rb_tree_node<std::pair<char const, Vehicle> > const*, std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node&) (stl_tree.h:658)
==155==    by 0x128D53: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_copy<std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node>(std::_Rb_tree_node<std::pair<char const, Vehicle> > const*, std::_Rb_tree_node_base*, std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node&) (stl_tree.h:1875)
==155==    by 0x128D8F: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_copy<std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node>(std::_Rb_tree_node<std::pair<char const, Vehicle> > const*, std::_Rb_tree_node_base*, std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node&) (stl_tree.h:1881)
==155==    by 0x1274DB: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_copy<std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node>(std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > > const&, std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node&) (stl_tree.h:901)
==155==    by 0x125A63: std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_copy(std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > > const&) (stl_tree.h:912)
==155==    by 0x123ED3: std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Rb_tree(std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > > const&) (stl_tree.h:950)
==155== 
==155== 1,375,540 (70,280 direct, 1,305,260 indirect) bytes in 1,255 blocks are definitely lost in loss record 38 of 40
==155==    at 0x484A3C4: operator new(unsigned long) (in /usr/lib/aarch64-linux-gnu/valgrind/vgpreload_memcheck-arm64-linux.so)
==155==    by 0x12A583: __gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<char const, Vehicle> > >::allocate(unsigned long, void const*) (new_allocator.h:114)
==155==    by 0x129C17: std::allocator_traits<std::allocator<std::_Rb_tree_node<std::pair<char const, Vehicle> > > >::allocate(std::allocator<std::_Rb_tree_node<std::pair<char const, Vehicle> > >&, unsigned long) (alloc_traits.h:444)
==155==    by 0x128B23: std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_get_node() (stl_tree.h:580)
==155==    by 0x12ADE7: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_create_node<std::pair<char const, Vehicle> const&>(std::pair<char const, Vehicle> const&) (stl_tree.h:630)
==155==    by 0x12A607: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node::operator()<std::pair<char const, Vehicle> const&>(std::pair<char const, Vehicle> const&) const (stl_tree.h:548)
==155==    by 0x129CA7: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_clone_node<std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node>(std::_Rb_tree_node<std::pair<char const, Vehicle> > const*, std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node&) (stl_tree.h:658)
==155==    by 0x128D53: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_copy<std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node>(std::_Rb_tree_node<std::pair<char const, Vehicle> > const*, std::_Rb_tree_node_base*, std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node&) (stl_tree.h:1875)
==155==    by 0x1274DB: std::_Rb_tree_node<std::pair<char const, Vehicle> >* std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_copy<std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node>(std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > > const&, std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Alloc_node&) (stl_tree.h:901)
==155==    by 0x125A63: std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_M_copy(std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > > const&) (stl_tree.h:912)
==155==    by 0x123ED3: std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::_Rb_tree(std::_Rb_tree<char, std::pair<char const, Vehicle>, std::_Select1st<std::pair<char const, Vehicle> >, std::less<char>, std::allocator<std::pair<char const, Vehicle> > > const&) (stl_tree.h:950)
==155==    by 0x12374F: std::map<char, Vehicle, std::less<char>, std::allocator<std::pair<char const, Vehicle> > >::map(std::map<char, Vehicle, std::less<char>, std::allocator<std::pair<char const, Vehicle> > > const&) (stl_map.h:205)
==155== 
==155== 2,241,336 (168,672 direct, 2,072,664 indirect) bytes in 5,271 blocks are definitely lost in loss record 40 of 40
==155==    at 0x484A3C4: operator new(unsigned long) (in /usr/lib/aarch64-linux-gnu/valgrind/vgpreload_memcheck-arm64-linux.so)
==155==    by 0x12BE2F: Solver::run() (solver.cpp:52)
==155==    by 0x11591F: runAndVerifySolution(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, Heuristic*, bool, unsigned long) (rh_tests.cpp:63)
==155==    by 0x11A907: Solver_InBoard10x10_Test::TestBody() (rh_tests.cpp:720)
==155==    by 0x163A3F: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==155==    by 0x157C27: testing::Test::Run() (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==155==    by 0x157D7B: testing::TestInfo::Run() (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==155==    by 0x157E57: testing::TestSuite::Run() (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==155==    by 0x1583A3: testing::internal::UnitTestImpl::RunAllTests() (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==155==    by 0x163FD7: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==155==    by 0x1585EB: testing::UnitTest::Run() (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==155==    by 0x114F47: main (in /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests)
==155== 
==155== LEAK SUMMARY:
==155==    definitely lost: 959,704 bytes in 15,123 blocks
==155==    indirectly lost: 6,206,452 bytes in 137,128 blocks
==155==      possibly lost: 2,168 bytes in 48 blocks
==155==    still reachable: 0 bytes in 0 blocks
==155==         suppressed: 0 bytes in 0 blocks
==155== 
==155== For lists of detected and suppressed errors, rerun with: -s
==155== ERROR SUMMARY: 25 errors from 25 contexts (suppressed: 0 from 0)
<end of output>
Test time =  52.36 sec
----------------------------------------------------------
Test Passed.
"Solver.InBoard10x10" end time: Feb 24 01:57 UTC
"Solver.InBoard10x10" time elapsed: 00:00:52
----------------------------------------------------------

59/60 Testing: Solver.Direct
59/60 Test: Solver.Direct
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests" "--gtest_filter=Solver.Direct"
Directory: /work/hw-echen606/hw3/hw3_stu_tests/rh_tests
"Solver.Direct" start time: Feb 24 01:57 UTC
Output:
----------------------------------------------------------
==156== Memcheck, a memory error detector
==156== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==156== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==156== Command: /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests --gtest_filter=Solver.Direct
==156== 
Running main() from /build/googletest-K1TalW/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = Solver.Direct
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from Solver
[ RUN      ] Solver.Direct
<end of output>
Test time =  60.05 sec
----------------------------------------------------------
Test Failed.
"Solver.Direct" end time: Feb 24 01:58 UTC
"Solver.Direct" time elapsed: 00:01:00
----------------------------------------------------------

60/60 Testing: Solver.UnSolvable1
60/60 Test: Solver.UnSolvable1
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests" "--gtest_filter=Solver.UnSolvable1"
Directory: /work/hw-echen606/hw3/hw3_stu_tests/rh_tests
"Solver.UnSolvable1" start time: Feb 24 01:58 UTC
Output:
----------------------------------------------------------
==157== Memcheck, a memory error detector
==157== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==157== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==157== Command: /work/hw-echen606/hw3/hw3_stu_tests/rh_tests/rh_tests --gtest_filter=Solver.UnSolvable1
==157== 
Running main() from /build/googletest-K1TalW/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = Solver.UnSolvable1
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from Solver
[ RUN      ] Solver.UnSolvable1
<end of output>
Test time =  60.00 sec
----------------------------------------------------------
Test Failed.
"Solver.UnSolvable1" end time: Feb 24 01:59 UTC
"Solver.UnSolvable1" time elapsed: 00:01:00
----------------------------------------------------------

End testing: Feb 24 01:59 UTC
