Start testing: Feb 10 06:28 UTC
----------------------------------------------------------
1/5 Testing: Cmdhandlers.AndHandler
1/5 Test: Cmdhandlers.AndHandler
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-echen606/hw2/hw2_tests/cmdhandler_tests/cmdhandler_tests" "--gtest_filter=Cmdhandlers.AndHandler"
Directory: /work/hw-echen606/hw2/hw2_tests/cmdhandler_tests
"Cmdhandlers.AndHandler" start time: Feb 10 06:28 UTC
Output:
----------------------------------------------------------
==10840== Memcheck, a memory error detector
==10840== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==10840== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==10840== Command: /work/hw-echen606/hw2/hw2_tests/cmdhandler_tests/cmdhandler_tests --gtest_filter=Cmdhandlers.AndHandler
==10840== 
Running main() from /build/googletest-K1TalW/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = Cmdhandlers.AndHandler
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from Cmdhandlers
[ RUN      ] Cmdhandlers.AndHandler
Unrecognized command
==10840== Invalid read of size 8
==10840==    at 0x117018: std::_Rb_tree<WebPage*, WebPage*, std::_Identity<WebPage*>, std::less<WebPage*>, std::allocator<WebPage*> >::_M_root() const (stl_tree.h:725)
==10840==    by 0x116D43: std::_Rb_tree<WebPage*, WebPage*, std::_Identity<WebPage*>, std::less<WebPage*>, std::allocator<WebPage*> >::_Rb_tree(std::_Rb_tree<WebPage*, WebPage*, std::_Identity<WebPage*>, std::less<WebPage*>, std::allocator<WebPage*> > const&) (stl_tree.h:949)
==10840==    by 0x116C3F: std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> >::set(std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> > const&) (stl_set.h:223)
==10840==    by 0x124043: void __gnu_cxx::new_allocator<std::_Rb_tree_node<std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> > > >::construct<std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> >, std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> > const&>(std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> >*, std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> > const&) (new_allocator.h:147)
==10840==    by 0x123E97: void std::allocator_traits<std::allocator<std::_Rb_tree_node<std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> > > > >::construct<std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> >, std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> > const&>(std::allocator<std::_Rb_tree_node<std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> > > >&, std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> >*, std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> > const&) (alloc_traits.h:484)
==10840==    by 0x123A57: void std::_Rb_tree<std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> >, std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> >, std::_Identity<std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> > >, std::less<std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> > >, std::allocator<std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> > > >::_M_construct_node<std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> > const&>(std::_Rb_tree_node<std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> > >*, std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> > const&) (stl_tree.h:614)
==10840==    by 0x123417: std::_Rb_tree_node<std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> > >* std::_Rb_tree<std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> >, std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> >, std::_Identity<std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> > >, std::less<std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> > >, std::allocator<std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> > > >::_M_create_node<std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> > const&>(std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> > const&) (stl_tree.h:631)
==10840==    by 0x122F5F: std::_Rb_tree_node<std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> > >* std::_Rb_tree<std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> >, std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> >, std::_Identity<std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> > >, std::less<std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> > >, std::allocator<std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> > > >::_Alloc_node::operator()<std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> > const&>(std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> > const&) const (stl_tree.h:548)
==10840==    by 0x12208B: std::_Rb_tree_iterator<std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> > > std::_Rb_tree<std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> >, std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> >, std::_Identity<std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> > >, std::less<std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> > >, std::allocator<std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> > > >::_M_insert_<std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> > const&, std::_Rb_tree<std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> >, std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> >, std::_Identity<std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> > >, std::less<std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> > >, std::allocator<std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> > > >::_Alloc_node>(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> > const&, std::_Rb_tree<std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> >, std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> >, std::_Identity<std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> > >, std::less<std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> > >, std::allocator<std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> > > >::_Alloc_node&) (stl_tree.h:1810)
==10840==    by 0x11FD4B: std::pair<std::_Rb_tree_iterator<std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> > >, bool> std::_Rb_tree<std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> >, std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> >, std::_Identity<std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> > >, std::less<std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> > >, std::allocator<std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> > > >::_M_insert_unique<std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> > const&>(std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> > const&) (stl_tree.h:2153)
==10840==    by 0x11D373: std::set<std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> >, std::less<std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> > >, std::allocator<std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> > > >::insert(std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> > const&) (stl_set.h:511)
==10840==    by 0x11C153: SearchEng::search(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, WebPageSetCombiner*) const (searcheng.cpp:205)
==10840==  Address 0x4cded98 is 24 bytes before a block of size 8 alloc'd
==10840==    at 0x484A3C4: operator new(unsigned long) (in /usr/lib/aarch64-linux-gnu/valgrind/vgpreload_memcheck-arm64-linux.so)
==10840==    by 0x11616F: AndHandler::AndHandler() (cmdhandler.cpp:140)
==10840==    by 0x112603: Cmdhandlers_AndHandler_Test::TestBody() (handler_tests.cpp:23)
==10840==    by 0x154C87: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /work/hw-echen606/hw2/hw2_tests/cmdhandler_tests/cmdhandler_tests)
==10840==    by 0x148E67: testing::Test::Run() (in /work/hw-echen606/hw2/hw2_tests/cmdhandler_tests/cmdhandler_tests)
==10840==    by 0x148FBB: testing::TestInfo::Run() (in /work/hw-echen606/hw2/hw2_tests/cmdhandler_tests/cmdhandler_tests)
==10840==    by 0x149097: testing::TestSuite::Run() (in /work/hw-echen606/hw2/hw2_tests/cmdhandler_tests/cmdhandler_tests)
==10840==    by 0x1495E3: testing::internal::UnitTestImpl::RunAllTests() (in /work/hw-echen606/hw2/hw2_tests/cmdhandler_tests/cmdhandler_tests)
==10840==    by 0x15521F: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /work/hw-echen606/hw2/hw2_tests/cmdhandler_tests/cmdhandler_tests)
==10840==    by 0x14982B: testing::UnitTest::Run() (in /work/hw-echen606/hw2/hw2_tests/cmdhandler_tests/cmdhandler_tests)
==10840==    by 0x111EA7: main (in /work/hw-echen606/hw2/hw2_tests/cmdhandler_tests/cmdhandler_tests)
==10840== 
==10840== Invalid read of size 8
==10840==    at 0x1191C8: std::_Rb_tree<WebPage*, WebPage*, std::_Identity<WebPage*>, std::less<WebPage*>, std::allocator<WebPage*> >::begin() const (stl_tree.h:1011)
==10840==    by 0x12398F: std::operator<(std::_Rb_tree<WebPage*, WebPage*, std::_Identity<WebPage*>, std::less<WebPage*>, std::allocator<WebPage*> > const&, std::_Rb_tree<WebPage*, WebPage*, std::_Identity<WebPage*>, std::less<WebPage*>, std::allocator<WebPage*> > const&) (stl_tree.h:1625)
==10840==    by 0x1233C3: bool std::operator< <WebPage*, std::less<WebPage*>, std::allocator<WebPage*> >(std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> > const&, std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> > const&) (stl_set.h:998)
==10840==    by 0x122DFB: std::less<std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> > >::operator()(std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> > const&, std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> > const&) const (stl_function.h:386)
==10840==    by 0x121E67: std::_Rb_tree<std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> >, std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> >, std::_Identity<std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> > >, std::less<std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> > >, std::allocator<std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> > > >::_M_get_insert_unique_pos(std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> > const&) (stl_tree.h:2095)
==10840==    by 0x11FCFF: std::pair<std::_Rb_tree_iterator<std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> > >, bool> std::_Rb_tree<std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> >, std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> >, std::_Identity<std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> > >, std::less<std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> > >, std::allocator<std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> > > >::_M_insert_unique<std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> > const&>(std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> > const&) (stl_tree.h:2147)
==10840==    by 0x11D373: std::set<std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> >, std::less<std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> > >, std::allocator<std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> > > >::insert(std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> > const&) (stl_set.h:511)
==10840==    by 0x11C153: SearchEng::search(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, WebPageSetCombiner*) const (searcheng.cpp:205)
==10840==    by 0x11637F: AndHandler::process(SearchEng*, std::istream&, std::ostream&) (cmdhandler.cpp:167)
==10840==    by 0x119D53: Handler::handle(SearchEng*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::istream&, std::ostream&) (handler.cpp:30)
==10840==    by 0x11278F: Cmdhandlers_AndHandler_Test::TestBody() (handler_tests.cpp:26)
==10840==    by 0x154C87: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /work/hw-echen606/hw2/hw2_tests/cmdhandler_tests/cmdhandler_tests)
==10840==  Address 0x4cdeda0 is 16 bytes before a block of size 8 alloc'd
==10840==    at 0x484A3C4: operator new(unsigned long) (in /usr/lib/aarch64-linux-gnu/valgrind/vgpreload_memcheck-arm64-linux.so)
==10840==    by 0x11616F: AndHandler::AndHandler() (cmdhandler.cpp:140)
==10840==    by 0x112603: Cmdhandlers_AndHandler_Test::TestBody() (handler_tests.cpp:23)
==10840==    by 0x154C87: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /work/hw-echen606/hw2/hw2_tests/cmdhandler_tests/cmdhandler_tests)
==10840==    by 0x148E67: testing::Test::Run() (in /work/hw-echen606/hw2/hw2_tests/cmdhandler_tests/cmdhandler_tests)
==10840==    by 0x148FBB: testing::TestInfo::Run() (in /work/hw-echen606/hw2/hw2_tests/cmdhandler_tests/cmdhandler_tests)
==10840==    by 0x149097: testing::TestSuite::Run() (in /work/hw-echen606/hw2/hw2_tests/cmdhandler_tests/cmdhandler_tests)
==10840==    by 0x1495E3: testing::internal::UnitTestImpl::RunAllTests() (in /work/hw-echen606/hw2/hw2_tests/cmdhandler_tests/cmdhandler_tests)
==10840==    by 0x15521F: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /work/hw-echen606/hw2/hw2_tests/cmdhandler_tests/cmdhandler_tests)
==10840==    by 0x14982B: testing::UnitTest::Run() (in /work/hw-echen606/hw2/hw2_tests/cmdhandler_tests/cmdhandler_tests)
==10840==    by 0x111EA7: main (in /work/hw-echen606/hw2/hw2_tests/cmdhandler_tests/cmdhandler_tests)
==10840== 
==10840== Invalid read of size 8
==10840==    at 0x1191C8: std::_Rb_tree<WebPage*, WebPage*, std::_Identity<WebPage*>, std::less<WebPage*>, std::allocator<WebPage*> >::begin() const (stl_tree.h:1011)
==10840==    by 0x1239A7: std::operator<(std::_Rb_tree<WebPage*, WebPage*, std::_Identity<WebPage*>, std::less<WebPage*>, std::allocator<WebPage*> > const&, std::_Rb_tree<WebPage*, WebPage*, std::_Identity<WebPage*>, std::less<WebPage*>, std::allocator<WebPage*> > const&) (stl_tree.h:1625)
==10840==    by 0x1233C3: bool std::operator< <WebPage*, std::less<WebPage*>, std::allocator<WebPage*> >(std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> > const&, std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> > const&) (stl_set.h:998)
==10840==    by 0x122DFB: std::less<std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> > >::operator()(std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> > const&, std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> > const&) const (stl_function.h:386)
==10840==    by 0x121F0F: std::_Rb_tree<std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> >, std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> >, std::_Identity<std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> > >, std::less<std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> > >, std::allocator<std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> > > >::_M_get_insert_unique_pos(std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> > const&) (stl_tree.h:2106)
==10840==    by 0x11FCFF: std::pair<std::_Rb_tree_iterator<std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> > >, bool> std::_Rb_tree<std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> >, std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> >, std::_Identity<std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> > >, std::less<std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> > >, std::allocator<std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> > > >::_M_insert_unique<std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> > const&>(std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> > const&) (stl_tree.h:2147)
==10840==    by 0x11D373: std::set<std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> >, std::less<std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> > >, std::allocator<std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> > > >::insert(std::set<WebPage*, std::less<WebPage*>, std::allocator<WebPage*> > const&) (stl_set.h:511)
==10840==    by 0x11C153: SearchEng::search(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, WebPageSetCombiner*) const (searcheng.cpp:205)
==10840==    by 0x11637F: AndHandler::process(SearchEng*, std::istream&, std::ostream&) (cmdhandler.cpp:167)
==10840==    by 0x119D53: Handler::handle(SearchEng*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::istream&, std::ostream&) (handler.cpp:30)
==10840==    by 0x11278F: Cmdhandlers_AndHandler_Test::TestBody() (handler_tests.cpp:26)
==10840==    by 0x154C87: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /work/hw-echen606/hw2/hw2_tests/cmdhandler_tests/cmdhandler_tests)
==10840==  Address 0x4cdeda0 is 16 bytes before a block of size 8 alloc'd
==10840==    at 0x484A3C4: operator new(unsigned long) (in /usr/lib/aarch64-linux-gnu/valgrind/vgpreload_memcheck-arm64-linux.so)
==10840==    by 0x11616F: AndHandler::AndHandler() (cmdhandler.cpp:140)
==10840==    by 0x112603: Cmdhandlers_AndHandler_Test::TestBody() (handler_tests.cpp:23)
==10840==    by 0x154C87: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /work/hw-echen606/hw2/hw2_tests/cmdhandler_tests/cmdhandler_tests)
==10840==    by 0x148E67: testing::Test::Run() (in /work/hw-echen606/hw2/hw2_tests/cmdhandler_tests/cmdhandler_tests)
==10840==    by 0x148FBB: testing::TestInfo::Run() (in /work/hw-echen606/hw2/hw2_tests/cmdhandler_tests/cmdhandler_tests)
==10840==    by 0x149097: testing::TestSuite::Run() (in /work/hw-echen606/hw2/hw2_tests/cmdhandler_tests/cmdhandler_tests)
==10840==    by 0x1495E3: testing::internal::UnitTestImpl::RunAllTests() (in /work/hw-echen606/hw2/hw2_tests/cmdhandler_tests/cmdhandler_tests)
==10840==    by 0x15521F: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (in /work/hw-echen606/hw2/hw2_tests/cmdhandler_tests/cmdhandler_tests)
==10840==    by 0x14982B: testing::UnitTest::Run() (in /work/hw-echen606/hw2/hw2_tests/cmdhandler_tests/cmdhandler_tests)
==10840==    by 0x111EA7: main (in /work/hw-echen606/hw2/hw2_tests/cmdhandler_tests/cmdhandler_tests)
==10840== 
0
[       OK ] Cmdhandlers.AndHandler (19 ms)
[----------] 1 test from Cmdhandlers (21 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (28 ms total)
[  PASSED  ] 1 test.
==10840== 
==10840== HEAP SUMMARY:
==10840==     in use at exit: 0 bytes in 0 blocks
==10840==   total heap usage: 229 allocs, 229 frees, 118,306 bytes allocated
==10840== 
==10840== All heap blocks were freed -- no leaks are possible
==10840== 
==10840== For lists of detected and suppressed errors, rerun with: -s
==10840== ERROR SUMMARY: 10 errors from 3 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.43 sec
----------------------------------------------------------
Test Passed.
"Cmdhandlers.AndHandler" end time: Feb 10 06:28 UTC
"Cmdhandlers.AndHandler" time elapsed: 00:00:00
----------------------------------------------------------

2/5 Testing: Cmdhandlers.OrHandler
2/5 Test: Cmdhandlers.OrHandler
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-echen606/hw2/hw2_tests/cmdhandler_tests/cmdhandler_tests" "--gtest_filter=Cmdhandlers.OrHandler"
Directory: /work/hw-echen606/hw2/hw2_tests/cmdhandler_tests
"Cmdhandlers.OrHandler" start time: Feb 10 06:28 UTC
Output:
----------------------------------------------------------
==10841== Memcheck, a memory error detector
==10841== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==10841== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==10841== Command: /work/hw-echen606/hw2/hw2_tests/cmdhandler_tests/cmdhandler_tests --gtest_filter=Cmdhandlers.OrHandler
==10841== 
Running main() from /build/googletest-K1TalW/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = Cmdhandlers.OrHandler
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from Cmdhandlers
[ RUN      ] Cmdhandlers.OrHandler
0
Unrecognized command
[       OK ] Cmdhandlers.OrHandler (10 ms)
[----------] 1 test from Cmdhandlers (12 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (19 ms total)
[  PASSED  ] 1 test.
==10841== 
==10841== HEAP SUMMARY:
==10841==     in use at exit: 0 bytes in 0 blocks
==10841==   total heap usage: 223 allocs, 223 frees, 117,835 bytes allocated
==10841== 
==10841== All heap blocks were freed -- no leaks are possible
==10841== 
==10841== For lists of detected and suppressed errors, rerun with: -s
==10841== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.42 sec
----------------------------------------------------------
Test Passed.
"Cmdhandlers.OrHandler" end time: Feb 10 06:28 UTC
"Cmdhandlers.OrHandler" time elapsed: 00:00:00
----------------------------------------------------------

3/5 Testing: Cmdhandlers.DiffHandler
3/5 Test: Cmdhandlers.DiffHandler
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-echen606/hw2/hw2_tests/cmdhandler_tests/cmdhandler_tests" "--gtest_filter=Cmdhandlers.DiffHandler"
Directory: /work/hw-echen606/hw2/hw2_tests/cmdhandler_tests
"Cmdhandlers.DiffHandler" start time: Feb 10 06:28 UTC
Output:
----------------------------------------------------------
==10842== Memcheck, a memory error detector
==10842== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==10842== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==10842== Command: /work/hw-echen606/hw2/hw2_tests/cmdhandler_tests/cmdhandler_tests --gtest_filter=Cmdhandlers.DiffHandler
==10842== 
Running main() from /build/googletest-K1TalW/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = Cmdhandlers.DiffHandler
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from Cmdhandlers
[ RUN      ] Cmdhandlers.DiffHandler
0
Unrecognized command
[       OK ] Cmdhandlers.DiffHandler (10 ms)
[----------] 1 test from Cmdhandlers (12 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (19 ms total)
[  PASSED  ] 1 test.
==10842== 
==10842== HEAP SUMMARY:
==10842==     in use at exit: 0 bytes in 0 blocks
==10842==   total heap usage: 223 allocs, 223 frees, 117,849 bytes allocated
==10842== 
==10842== All heap blocks were freed -- no leaks are possible
==10842== 
==10842== For lists of detected and suppressed errors, rerun with: -s
==10842== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.41 sec
----------------------------------------------------------
Test Passed.
"Cmdhandlers.DiffHandler" end time: Feb 10 06:28 UTC
"Cmdhandlers.DiffHandler" time elapsed: 00:00:00
----------------------------------------------------------

4/5 Testing: Cmdhandlers.IncomingHandler
4/5 Test: Cmdhandlers.IncomingHandler
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-echen606/hw2/hw2_tests/cmdhandler_tests/cmdhandler_tests" "--gtest_filter=Cmdhandlers.IncomingHandler"
Directory: /work/hw-echen606/hw2/hw2_tests/cmdhandler_tests
"Cmdhandlers.IncomingHandler" start time: Feb 10 06:28 UTC
Output:
----------------------------------------------------------
==10843== Memcheck, a memory error detector
==10843== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==10843== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==10843== Command: /work/hw-echen606/hw2/hw2_tests/cmdhandler_tests/cmdhandler_tests --gtest_filter=Cmdhandlers.IncomingHandler
==10843== 
Running main() from /build/googletest-K1TalW/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = Cmdhandlers.IncomingHandler
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from Cmdhandlers
[ RUN      ] Cmdhandlers.IncomingHandler
1
test-small/pgb.md
Unrecognized command
[       OK ] Cmdhandlers.IncomingHandler (69 ms)
[----------] 1 test from Cmdhandlers (72 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (79 ms total)
[  PASSED  ] 1 test.
==10843== 
==10843== HEAP SUMMARY:
==10843==     in use at exit: 0 bytes in 0 blocks
==10843==   total heap usage: 718 allocs, 718 frees, 221,771 bytes allocated
==10843== 
==10843== All heap blocks were freed -- no leaks are possible
==10843== 
==10843== For lists of detected and suppressed errors, rerun with: -s
==10843== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.49 sec
----------------------------------------------------------
Test Passed.
"Cmdhandlers.IncomingHandler" end time: Feb 10 06:28 UTC
"Cmdhandlers.IncomingHandler" time elapsed: 00:00:00
----------------------------------------------------------

5/5 Testing: Cmdhandlers.OutgoingHandler
5/5 Test: Cmdhandlers.OutgoingHandler
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-echen606/hw2/hw2_tests/cmdhandler_tests/cmdhandler_tests" "--gtest_filter=Cmdhandlers.OutgoingHandler"
Directory: /work/hw-echen606/hw2/hw2_tests/cmdhandler_tests
"Cmdhandlers.OutgoingHandler" start time: Feb 10 06:28 UTC
Output:
----------------------------------------------------------
==10844== Memcheck, a memory error detector
==10844== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==10844== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==10844== Command: /work/hw-echen606/hw2/hw2_tests/cmdhandler_tests/cmdhandler_tests --gtest_filter=Cmdhandlers.OutgoingHandler
==10844== 
Running main() from /build/googletest-K1TalW/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = Cmdhandlers.OutgoingHandler
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from Cmdhandlers
[ RUN      ] Cmdhandlers.OutgoingHandler
0
Unrecognized command
[       OK ] Cmdhandlers.OutgoingHandler (62 ms)
[----------] 1 test from Cmdhandlers (65 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (72 ms total)
[  PASSED  ] 1 test.
==10844== 
==10844== HEAP SUMMARY:
==10844==     in use at exit: 0 bytes in 0 blocks
==10844==   total heap usage: 719 allocs, 719 frees, 221,792 bytes allocated
==10844== 
==10844== All heap blocks were freed -- no leaks are possible
==10844== 
==10844== For lists of detected and suppressed errors, rerun with: -s
==10844== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   0.47 sec
----------------------------------------------------------
Test Passed.
"Cmdhandlers.OutgoingHandler" end time: Feb 10 06:28 UTC
"Cmdhandlers.OutgoingHandler" time elapsed: 00:00:00
----------------------------------------------------------

End testing: Feb 10 06:28 UTC
